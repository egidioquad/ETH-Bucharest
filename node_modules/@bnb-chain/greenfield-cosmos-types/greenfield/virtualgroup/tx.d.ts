import { Coin, CoinAmino, CoinSDKType } from "../../cosmos/base/v1beta1/coin";
import { Approval, ApprovalAmino, ApprovalSDKType } from "../common/approval";
import { Params, ParamsAmino, ParamsSDKType } from "./params";
import * as _m0 from "protobufjs/minimal";
import { Rpc } from "../../helpers";
export declare const protobufPackage = "greenfield.virtualgroup";
/** MsgUpdateParams is the Msg/UpdateParams request type. */
export interface MsgUpdateParams {
    /** authority is the address that controls the module (defaults to x/gov unless overwritten). */
    authority: string;
    /**
     * params defines the x/virtualgroup parameters to update.
     * NOTE: All parameters must be supplied.
     */
    params: Params;
}
export interface MsgUpdateParamsProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgUpdateParams";
    value: Uint8Array;
}
/** MsgUpdateParams is the Msg/UpdateParams request type. */
export interface MsgUpdateParamsAmino {
    /** authority is the address that controls the module (defaults to x/gov unless overwritten). */
    authority?: string;
    /**
     * params defines the x/virtualgroup parameters to update.
     * NOTE: All parameters must be supplied.
     */
    params?: ParamsAmino;
}
export interface MsgUpdateParamsAminoMsg {
    type: "/greenfield.virtualgroup.MsgUpdateParams";
    value: MsgUpdateParamsAmino;
}
/** MsgUpdateParams is the Msg/UpdateParams request type. */
export interface MsgUpdateParamsSDKType {
    authority: string;
    params: ParamsSDKType;
}
/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 */
export interface MsgUpdateParamsResponse {
}
export interface MsgUpdateParamsResponseProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgUpdateParamsResponse";
    value: Uint8Array;
}
/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 */
export interface MsgUpdateParamsResponseAmino {
}
export interface MsgUpdateParamsResponseAminoMsg {
    type: "/greenfield.virtualgroup.MsgUpdateParamsResponse";
    value: MsgUpdateParamsResponseAmino;
}
/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 */
export interface MsgUpdateParamsResponseSDKType {
}
export interface MsgCreateGlobalVirtualGroup {
    /** storage_provider defines the operator account address of the storage provider who create the global virtual group. */
    storageProvider: string;
    /** family_id is the identifier for the virtual group's family. */
    familyId: number;
    /** secondary_sp_id is a list of secondary storage provider IDs associated with the virtual group. */
    secondarySpIds: number[];
    /**
     * total_deposit is the total deposit amount required for the virtual group.
     * The tokens needs deposited and the size of storage are correlated.
     */
    deposit: Coin;
}
export interface MsgCreateGlobalVirtualGroupProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgCreateGlobalVirtualGroup";
    value: Uint8Array;
}
export interface MsgCreateGlobalVirtualGroupAmino {
    /** storage_provider defines the operator account address of the storage provider who create the global virtual group. */
    storage_provider?: string;
    /** family_id is the identifier for the virtual group's family. */
    family_id?: number;
    /** secondary_sp_id is a list of secondary storage provider IDs associated with the virtual group. */
    secondary_sp_ids?: number[];
    /**
     * total_deposit is the total deposit amount required for the virtual group.
     * The tokens needs deposited and the size of storage are correlated.
     */
    deposit?: CoinAmino;
}
export interface MsgCreateGlobalVirtualGroupAminoMsg {
    type: "/greenfield.virtualgroup.MsgCreateGlobalVirtualGroup";
    value: MsgCreateGlobalVirtualGroupAmino;
}
export interface MsgCreateGlobalVirtualGroupSDKType {
    storage_provider: string;
    family_id: number;
    secondary_sp_ids: number[];
    deposit: CoinSDKType;
}
export interface MsgCreateGlobalVirtualGroupResponse {
}
export interface MsgCreateGlobalVirtualGroupResponseProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgCreateGlobalVirtualGroupResponse";
    value: Uint8Array;
}
export interface MsgCreateGlobalVirtualGroupResponseAmino {
}
export interface MsgCreateGlobalVirtualGroupResponseAminoMsg {
    type: "/greenfield.virtualgroup.MsgCreateGlobalVirtualGroupResponse";
    value: MsgCreateGlobalVirtualGroupResponseAmino;
}
export interface MsgCreateGlobalVirtualGroupResponseSDKType {
}
export interface MsgDeleteGlobalVirtualGroup {
    /** storage_provider defines the operator account address of the storage provider who delete the global virtual group. */
    storageProvider: string;
    /** global_virtual_group_id is the identifier of the global virtual group. */
    globalVirtualGroupId: number;
}
export interface MsgDeleteGlobalVirtualGroupProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgDeleteGlobalVirtualGroup";
    value: Uint8Array;
}
export interface MsgDeleteGlobalVirtualGroupAmino {
    /** storage_provider defines the operator account address of the storage provider who delete the global virtual group. */
    storage_provider?: string;
    /** global_virtual_group_id is the identifier of the global virtual group. */
    global_virtual_group_id?: number;
}
export interface MsgDeleteGlobalVirtualGroupAminoMsg {
    type: "/greenfield.virtualgroup.MsgDeleteGlobalVirtualGroup";
    value: MsgDeleteGlobalVirtualGroupAmino;
}
export interface MsgDeleteGlobalVirtualGroupSDKType {
    storage_provider: string;
    global_virtual_group_id: number;
}
export interface MsgDeleteGlobalVirtualGroupResponse {
}
export interface MsgDeleteGlobalVirtualGroupResponseProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgDeleteGlobalVirtualGroupResponse";
    value: Uint8Array;
}
export interface MsgDeleteGlobalVirtualGroupResponseAmino {
}
export interface MsgDeleteGlobalVirtualGroupResponseAminoMsg {
    type: "/greenfield.virtualgroup.MsgDeleteGlobalVirtualGroupResponse";
    value: MsgDeleteGlobalVirtualGroupResponseAmino;
}
export interface MsgDeleteGlobalVirtualGroupResponseSDKType {
}
export interface MsgDeposit {
    /** storage_provider defines the operator/funding account address of the storage provider who deposit to the global virtual group. */
    storageProvider: string;
    /** global_virtual_group_id is the identifier of the global virtual group. */
    globalVirtualGroupId: number;
    /** deposit is the amount of tokens being deposited for the global virtual group. */
    deposit: Coin;
}
export interface MsgDepositProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgDeposit";
    value: Uint8Array;
}
export interface MsgDepositAmino {
    /** storage_provider defines the operator/funding account address of the storage provider who deposit to the global virtual group. */
    storage_provider?: string;
    /** global_virtual_group_id is the identifier of the global virtual group. */
    global_virtual_group_id?: number;
    /** deposit is the amount of tokens being deposited for the global virtual group. */
    deposit?: CoinAmino;
}
export interface MsgDepositAminoMsg {
    type: "/greenfield.virtualgroup.MsgDeposit";
    value: MsgDepositAmino;
}
export interface MsgDepositSDKType {
    storage_provider: string;
    global_virtual_group_id: number;
    deposit: CoinSDKType;
}
export interface MsgDepositResponse {
}
export interface MsgDepositResponseProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgDepositResponse";
    value: Uint8Array;
}
export interface MsgDepositResponseAmino {
}
export interface MsgDepositResponseAminoMsg {
    type: "/greenfield.virtualgroup.MsgDepositResponse";
    value: MsgDepositResponseAmino;
}
export interface MsgDepositResponseSDKType {
}
export interface MsgWithdraw {
    /** storage_provider defines the operator/funding account address of the storage provider who withdraw from the global virtual group. */
    storageProvider: string;
    /** global_virtual_group_id is the identifier of the global virtual group. */
    globalVirtualGroupId: number;
    /**
     * withdraw is the amount of coins to be withdrawn.
     * The amount needs to be smaller than stored_size * storage_staking_price
     */
    withdraw: Coin;
}
export interface MsgWithdrawProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgWithdraw";
    value: Uint8Array;
}
export interface MsgWithdrawAmino {
    /** storage_provider defines the operator/funding account address of the storage provider who withdraw from the global virtual group. */
    storage_provider?: string;
    /** global_virtual_group_id is the identifier of the global virtual group. */
    global_virtual_group_id?: number;
    /**
     * withdraw is the amount of coins to be withdrawn.
     * The amount needs to be smaller than stored_size * storage_staking_price
     */
    withdraw?: CoinAmino;
}
export interface MsgWithdrawAminoMsg {
    type: "/greenfield.virtualgroup.MsgWithdraw";
    value: MsgWithdrawAmino;
}
export interface MsgWithdrawSDKType {
    storage_provider: string;
    global_virtual_group_id: number;
    withdraw: CoinSDKType;
}
export interface MsgWithdrawResponse {
}
export interface MsgWithdrawResponseProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgWithdrawResponse";
    value: Uint8Array;
}
export interface MsgWithdrawResponseAmino {
}
export interface MsgWithdrawResponseAminoMsg {
    type: "/greenfield.virtualgroup.MsgWithdrawResponse";
    value: MsgWithdrawResponseAmino;
}
export interface MsgWithdrawResponseSDKType {
}
export interface MsgSwapOut {
    /** storage_provider defines the operator account address of the storage provider who want to swap out from the global virtual group. */
    storageProvider: string;
    /**
     * virtual_group_family_id is the identifier of the virtual group family.
     * if it set to non-zero, it represents that the operator swap out as the primary storage provider
     * it it set to zero, it represents that the operator swap out as the secondary storage provider.
     */
    globalVirtualGroupFamilyId: number;
    /**
     * global_virtual_group_ids is a list of global virtual group IDs associated with the swap out.
     * It allows to be empty only when the operator is the primary storage provider.
     */
    globalVirtualGroupIds: number[];
    /** successor_sp_id is the unique id of the successor storage provider. */
    successorSpId: number;
    /**
     * approval includes an expiration time and a signature.
     * The fields to be signed with contains the necessary information of the successor.
     */
    successorSpApproval?: Approval;
}
export interface MsgSwapOutProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgSwapOut";
    value: Uint8Array;
}
export interface MsgSwapOutAmino {
    /** storage_provider defines the operator account address of the storage provider who want to swap out from the global virtual group. */
    storage_provider?: string;
    /**
     * virtual_group_family_id is the identifier of the virtual group family.
     * if it set to non-zero, it represents that the operator swap out as the primary storage provider
     * it it set to zero, it represents that the operator swap out as the secondary storage provider.
     */
    global_virtual_group_family_id?: number;
    /**
     * global_virtual_group_ids is a list of global virtual group IDs associated with the swap out.
     * It allows to be empty only when the operator is the primary storage provider.
     */
    global_virtual_group_ids?: number[];
    /** successor_sp_id is the unique id of the successor storage provider. */
    successor_sp_id?: number;
    /**
     * approval includes an expiration time and a signature.
     * The fields to be signed with contains the necessary information of the successor.
     */
    successor_sp_approval?: ApprovalAmino;
}
export interface MsgSwapOutAminoMsg {
    type: "/greenfield.virtualgroup.MsgSwapOut";
    value: MsgSwapOutAmino;
}
export interface MsgSwapOutSDKType {
    storage_provider: string;
    global_virtual_group_family_id: number;
    global_virtual_group_ids: number[];
    successor_sp_id: number;
    successor_sp_approval?: ApprovalSDKType;
}
export interface MsgSwapOutResponse {
}
export interface MsgSwapOutResponseProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgSwapOutResponse";
    value: Uint8Array;
}
export interface MsgSwapOutResponseAmino {
}
export interface MsgSwapOutResponseAminoMsg {
    type: "/greenfield.virtualgroup.MsgSwapOutResponse";
    value: MsgSwapOutResponseAmino;
}
export interface MsgSwapOutResponseSDKType {
}
export interface MsgCompleteSwapOut {
    /** storage_provider defines the operator account address of the storage provider who complete swap out task. */
    storageProvider: string;
    /**
     * virtual_group_family_id is the identifier of the virtual group family.
     * if it set to non-zero, it represents that the operator swap out as the primary storage provider
     * it it set to zero, it represents that the operator swap out as the secondary storage provider.
     */
    globalVirtualGroupFamilyId: number;
    /**
     * global_virtual_group_ids is a list of global virtual group IDs associated with the swap out.
     * It allows to be empty only when the operator is the primary storage provider.
     */
    globalVirtualGroupIds: number[];
}
export interface MsgCompleteSwapOutProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgCompleteSwapOut";
    value: Uint8Array;
}
export interface MsgCompleteSwapOutAmino {
    /** storage_provider defines the operator account address of the storage provider who complete swap out task. */
    storage_provider?: string;
    /**
     * virtual_group_family_id is the identifier of the virtual group family.
     * if it set to non-zero, it represents that the operator swap out as the primary storage provider
     * it it set to zero, it represents that the operator swap out as the secondary storage provider.
     */
    global_virtual_group_family_id?: number;
    /**
     * global_virtual_group_ids is a list of global virtual group IDs associated with the swap out.
     * It allows to be empty only when the operator is the primary storage provider.
     */
    global_virtual_group_ids?: number[];
}
export interface MsgCompleteSwapOutAminoMsg {
    type: "/greenfield.virtualgroup.MsgCompleteSwapOut";
    value: MsgCompleteSwapOutAmino;
}
export interface MsgCompleteSwapOutSDKType {
    storage_provider: string;
    global_virtual_group_family_id: number;
    global_virtual_group_ids: number[];
}
export interface MsgCompleteSwapOutResponse {
}
export interface MsgCompleteSwapOutResponseProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgCompleteSwapOutResponse";
    value: Uint8Array;
}
export interface MsgCompleteSwapOutResponseAmino {
}
export interface MsgCompleteSwapOutResponseAminoMsg {
    type: "/greenfield.virtualgroup.MsgCompleteSwapOutResponse";
    value: MsgCompleteSwapOutResponseAmino;
}
export interface MsgCompleteSwapOutResponseSDKType {
}
export interface MsgCancelSwapOut {
    /** storage_provider defines the operator account address of the storage provider who cancel the swap out task. */
    storageProvider: string;
    /**
     * virtual_group_family_id is the identifier of the virtual group family.
     * if it set to non-zero, it represents that the operator swap out as the primary storage provider
     * it it set to zero, it represents that the operator swap out as the secondary storage provider.
     */
    globalVirtualGroupFamilyId: number;
    /**
     * global_virtual_group_ids is a list of global virtual group IDs associated with the swap out.
     * It allows to be empty only when the operator is the primary storage provider.
     */
    globalVirtualGroupIds: number[];
}
export interface MsgCancelSwapOutProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgCancelSwapOut";
    value: Uint8Array;
}
export interface MsgCancelSwapOutAmino {
    /** storage_provider defines the operator account address of the storage provider who cancel the swap out task. */
    storage_provider?: string;
    /**
     * virtual_group_family_id is the identifier of the virtual group family.
     * if it set to non-zero, it represents that the operator swap out as the primary storage provider
     * it it set to zero, it represents that the operator swap out as the secondary storage provider.
     */
    global_virtual_group_family_id?: number;
    /**
     * global_virtual_group_ids is a list of global virtual group IDs associated with the swap out.
     * It allows to be empty only when the operator is the primary storage provider.
     */
    global_virtual_group_ids?: number[];
}
export interface MsgCancelSwapOutAminoMsg {
    type: "/greenfield.virtualgroup.MsgCancelSwapOut";
    value: MsgCancelSwapOutAmino;
}
export interface MsgCancelSwapOutSDKType {
    storage_provider: string;
    global_virtual_group_family_id: number;
    global_virtual_group_ids: number[];
}
export interface MsgCancelSwapOutResponse {
}
export interface MsgCancelSwapOutResponseProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgCancelSwapOutResponse";
    value: Uint8Array;
}
export interface MsgCancelSwapOutResponseAmino {
}
export interface MsgCancelSwapOutResponseAminoMsg {
    type: "/greenfield.virtualgroup.MsgCancelSwapOutResponse";
    value: MsgCancelSwapOutResponseAmino;
}
export interface MsgCancelSwapOutResponseSDKType {
}
/**
 * MsgSettle define the message for settling storage income of GVG family or several GVGs.
 * Firstly, the handler will do stream settlement for the payment account; and
 * secondly, the income will be distributed to related storage providers.
 */
export interface MsgSettle {
    /**
     * storage_provider defines the account address who initiates the settle request.
     * After Pampas upgrade, not only storage provider, anyone can submit this message.
     */
    storageProvider: string;
    /** global_virtual_group_family_id is the identifier of the global virtual group family. */
    globalVirtualGroupFamilyId: number;
    /** global_virtual_group_id is the identifier of the global virtual group. */
    globalVirtualGroupIds: number[];
}
export interface MsgSettleProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgSettle";
    value: Uint8Array;
}
/**
 * MsgSettle define the message for settling storage income of GVG family or several GVGs.
 * Firstly, the handler will do stream settlement for the payment account; and
 * secondly, the income will be distributed to related storage providers.
 */
export interface MsgSettleAmino {
    /**
     * storage_provider defines the account address who initiates the settle request.
     * After Pampas upgrade, not only storage provider, anyone can submit this message.
     */
    storage_provider?: string;
    /** global_virtual_group_family_id is the identifier of the global virtual group family. */
    global_virtual_group_family_id?: number;
    /** global_virtual_group_id is the identifier of the global virtual group. */
    global_virtual_group_ids?: number[];
}
export interface MsgSettleAminoMsg {
    type: "/greenfield.virtualgroup.MsgSettle";
    value: MsgSettleAmino;
}
/**
 * MsgSettle define the message for settling storage income of GVG family or several GVGs.
 * Firstly, the handler will do stream settlement for the payment account; and
 * secondly, the income will be distributed to related storage providers.
 */
export interface MsgSettleSDKType {
    storage_provider: string;
    global_virtual_group_family_id: number;
    global_virtual_group_ids: number[];
}
export interface MsgSettleResponse {
}
export interface MsgSettleResponseProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgSettleResponse";
    value: Uint8Array;
}
export interface MsgSettleResponseAmino {
}
export interface MsgSettleResponseAminoMsg {
    type: "/greenfield.virtualgroup.MsgSettleResponse";
    value: MsgSettleResponseAmino;
}
export interface MsgSettleResponseSDKType {
}
export interface MsgStorageProviderExit {
    /** storage_provider defines the operator account address of the storage provider who want to exit from the greenfield storage network. */
    storageProvider: string;
}
export interface MsgStorageProviderExitProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgStorageProviderExit";
    value: Uint8Array;
}
export interface MsgStorageProviderExitAmino {
    /** storage_provider defines the operator account address of the storage provider who want to exit from the greenfield storage network. */
    storage_provider?: string;
}
export interface MsgStorageProviderExitAminoMsg {
    type: "/greenfield.virtualgroup.MsgStorageProviderExit";
    value: MsgStorageProviderExitAmino;
}
export interface MsgStorageProviderExitSDKType {
    storage_provider: string;
}
export interface MsgStorageProviderExitResponse {
}
export interface MsgStorageProviderExitResponseProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgStorageProviderExitResponse";
    value: Uint8Array;
}
export interface MsgStorageProviderExitResponseAmino {
}
export interface MsgStorageProviderExitResponseAminoMsg {
    type: "/greenfield.virtualgroup.MsgStorageProviderExitResponse";
    value: MsgStorageProviderExitResponseAmino;
}
export interface MsgStorageProviderExitResponseSDKType {
}
export interface MsgCompleteStorageProviderExit {
    /** storage_provider defines the operator account address of the storage provider who want to exit from the greenfield storage network. */
    storageProvider: string;
}
export interface MsgCompleteStorageProviderExitProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgCompleteStorageProviderExit";
    value: Uint8Array;
}
export interface MsgCompleteStorageProviderExitAmino {
    /** storage_provider defines the operator account address of the storage provider who want to exit from the greenfield storage network. */
    storage_provider?: string;
}
export interface MsgCompleteStorageProviderExitAminoMsg {
    type: "/greenfield.virtualgroup.MsgCompleteStorageProviderExit";
    value: MsgCompleteStorageProviderExitAmino;
}
export interface MsgCompleteStorageProviderExitSDKType {
    storage_provider: string;
}
export interface MsgCompleteStorageProviderExitResponse {
}
export interface MsgCompleteStorageProviderExitResponseProtoMsg {
    typeUrl: "/greenfield.virtualgroup.MsgCompleteStorageProviderExitResponse";
    value: Uint8Array;
}
export interface MsgCompleteStorageProviderExitResponseAmino {
}
export interface MsgCompleteStorageProviderExitResponseAminoMsg {
    type: "/greenfield.virtualgroup.MsgCompleteStorageProviderExitResponse";
    value: MsgCompleteStorageProviderExitResponseAmino;
}
export interface MsgCompleteStorageProviderExitResponseSDKType {
}
export declare const MsgUpdateParams: {
    typeUrl: string;
    encode(message: MsgUpdateParams, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParams;
    fromJSON(object: any): MsgUpdateParams;
    toJSON(message: MsgUpdateParams): unknown;
    fromPartial<I extends {
        authority?: string;
        params?: {
            depositDenom?: string;
            gvgStakingPerBytes?: string;
            maxLocalVirtualGroupNumPerBucket?: number;
            maxGlobalVirtualGroupNumPerFamily?: number;
            maxStoreSizePerFamily?: string | number | import("long").Long;
        };
    } & {
        authority?: string;
        params?: {
            depositDenom?: string;
            gvgStakingPerBytes?: string;
            maxLocalVirtualGroupNumPerBucket?: number;
            maxGlobalVirtualGroupNumPerFamily?: number;
            maxStoreSizePerFamily?: string | number | import("long").Long;
        } & {
            depositDenom?: string;
            gvgStakingPerBytes?: string;
            maxLocalVirtualGroupNumPerBucket?: number;
            maxGlobalVirtualGroupNumPerFamily?: number;
            maxStoreSizePerFamily?: string | number | (import("long").Long & {
                high: number;
                low: number;
                unsigned: boolean;
                add: (addend: string | number | import("long").Long) => import("long").Long;
                and: (other: string | number | import("long").Long) => import("long").Long;
                compare: (other: string | number | import("long").Long) => number;
                comp: (other: string | number | import("long").Long) => number;
                divide: (divisor: string | number | import("long").Long) => import("long").Long;
                div: (divisor: string | number | import("long").Long) => import("long").Long;
                equals: (other: string | number | import("long").Long) => boolean;
                eq: (other: string | number | import("long").Long) => boolean;
                getHighBits: () => number;
                getHighBitsUnsigned: () => number;
                getLowBits: () => number;
                getLowBitsUnsigned: () => number;
                getNumBitsAbs: () => number;
                greaterThan: (other: string | number | import("long").Long) => boolean;
                gt: (other: string | number | import("long").Long) => boolean;
                greaterThanOrEqual: (other: string | number | import("long").Long) => boolean;
                gte: (other: string | number | import("long").Long) => boolean;
                isEven: () => boolean;
                isNegative: () => boolean;
                isOdd: () => boolean;
                isPositive: () => boolean;
                isZero: () => boolean;
                lessThan: (other: string | number | import("long").Long) => boolean;
                lt: (other: string | number | import("long").Long) => boolean;
                lessThanOrEqual: (other: string | number | import("long").Long) => boolean;
                lte: (other: string | number | import("long").Long) => boolean;
                modulo: (other: string | number | import("long").Long) => import("long").Long;
                mod: (other: string | number | import("long").Long) => import("long").Long;
                multiply: (multiplier: string | number | import("long").Long) => import("long").Long;
                mul: (multiplier: string | number | import("long").Long) => import("long").Long;
                negate: () => import("long").Long;
                neg: () => import("long").Long;
                not: () => import("long").Long;
                notEquals: (other: string | number | import("long").Long) => boolean;
                neq: (other: string | number | import("long").Long) => boolean;
                or: (other: string | number | import("long").Long) => import("long").Long;
                shiftLeft: (numBits: number | import("long").Long) => import("long").Long;
                shl: (numBits: number | import("long").Long) => import("long").Long;
                shiftRight: (numBits: number | import("long").Long) => import("long").Long;
                shr: (numBits: number | import("long").Long) => import("long").Long;
                shiftRightUnsigned: (numBits: number | import("long").Long) => import("long").Long;
                shru: (numBits: number | import("long").Long) => import("long").Long;
                subtract: (subtrahend: string | number | import("long").Long) => import("long").Long;
                sub: (subtrahend: string | number | import("long").Long) => import("long").Long;
                toInt: () => number;
                toNumber: () => number;
                toBytes: (le?: boolean) => number[];
                toBytesLE: () => number[];
                toBytesBE: () => number[];
                toSigned: () => import("long").Long;
                toString: (radix?: number) => string;
                toUnsigned: () => import("long").Long;
                xor: (other: string | number | import("long").Long) => import("long").Long;
            } & Record<Exclude<keyof I["params"]["maxStoreSizePerFamily"], keyof import("long").Long>, never>);
        } & Record<Exclude<keyof I["params"], keyof Params>, never>;
    } & Record<Exclude<keyof I, keyof MsgUpdateParams>, never>>(object: I): MsgUpdateParams;
    fromSDK(object: MsgUpdateParamsSDKType): MsgUpdateParams;
    toSDK(message: MsgUpdateParams): MsgUpdateParamsSDKType;
    fromAmino(object: MsgUpdateParamsAmino): MsgUpdateParams;
    toAmino(message: MsgUpdateParams): MsgUpdateParamsAmino;
    fromAminoMsg(object: MsgUpdateParamsAminoMsg): MsgUpdateParams;
    fromProtoMsg(message: MsgUpdateParamsProtoMsg): MsgUpdateParams;
    toProto(message: MsgUpdateParams): Uint8Array;
    toProtoMsg(message: MsgUpdateParams): MsgUpdateParamsProtoMsg;
};
export declare const MsgUpdateParamsResponse: {
    typeUrl: string;
    encode(_: MsgUpdateParamsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgUpdateParamsResponse;
    fromJSON(_: any): MsgUpdateParamsResponse;
    toJSON(_: MsgUpdateParamsResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgUpdateParamsResponse;
    fromSDK(_: MsgUpdateParamsResponseSDKType): MsgUpdateParamsResponse;
    toSDK(_: MsgUpdateParamsResponse): MsgUpdateParamsResponseSDKType;
    fromAmino(_: MsgUpdateParamsResponseAmino): MsgUpdateParamsResponse;
    toAmino(_: MsgUpdateParamsResponse): MsgUpdateParamsResponseAmino;
    fromAminoMsg(object: MsgUpdateParamsResponseAminoMsg): MsgUpdateParamsResponse;
    fromProtoMsg(message: MsgUpdateParamsResponseProtoMsg): MsgUpdateParamsResponse;
    toProto(message: MsgUpdateParamsResponse): Uint8Array;
    toProtoMsg(message: MsgUpdateParamsResponse): MsgUpdateParamsResponseProtoMsg;
};
export declare const MsgCreateGlobalVirtualGroup: {
    typeUrl: string;
    encode(message: MsgCreateGlobalVirtualGroup, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreateGlobalVirtualGroup;
    fromJSON(object: any): MsgCreateGlobalVirtualGroup;
    toJSON(message: MsgCreateGlobalVirtualGroup): unknown;
    fromPartial<I extends {
        storageProvider?: string;
        familyId?: number;
        secondarySpIds?: number[];
        deposit?: {
            denom?: string;
            amount?: string;
        };
    } & {
        storageProvider?: string;
        familyId?: number;
        secondarySpIds?: number[] & number[] & Record<Exclude<keyof I["secondarySpIds"], keyof number[]>, never>;
        deposit?: {
            denom?: string;
            amount?: string;
        } & {
            denom?: string;
            amount?: string;
        } & Record<Exclude<keyof I["deposit"], keyof Coin>, never>;
    } & Record<Exclude<keyof I, keyof MsgCreateGlobalVirtualGroup>, never>>(object: I): MsgCreateGlobalVirtualGroup;
    fromSDK(object: MsgCreateGlobalVirtualGroupSDKType): MsgCreateGlobalVirtualGroup;
    toSDK(message: MsgCreateGlobalVirtualGroup): MsgCreateGlobalVirtualGroupSDKType;
    fromAmino(object: MsgCreateGlobalVirtualGroupAmino): MsgCreateGlobalVirtualGroup;
    toAmino(message: MsgCreateGlobalVirtualGroup): MsgCreateGlobalVirtualGroupAmino;
    fromAminoMsg(object: MsgCreateGlobalVirtualGroupAminoMsg): MsgCreateGlobalVirtualGroup;
    fromProtoMsg(message: MsgCreateGlobalVirtualGroupProtoMsg): MsgCreateGlobalVirtualGroup;
    toProto(message: MsgCreateGlobalVirtualGroup): Uint8Array;
    toProtoMsg(message: MsgCreateGlobalVirtualGroup): MsgCreateGlobalVirtualGroupProtoMsg;
};
export declare const MsgCreateGlobalVirtualGroupResponse: {
    typeUrl: string;
    encode(_: MsgCreateGlobalVirtualGroupResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgCreateGlobalVirtualGroupResponse;
    fromJSON(_: any): MsgCreateGlobalVirtualGroupResponse;
    toJSON(_: MsgCreateGlobalVirtualGroupResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgCreateGlobalVirtualGroupResponse;
    fromSDK(_: MsgCreateGlobalVirtualGroupResponseSDKType): MsgCreateGlobalVirtualGroupResponse;
    toSDK(_: MsgCreateGlobalVirtualGroupResponse): MsgCreateGlobalVirtualGroupResponseSDKType;
    fromAmino(_: MsgCreateGlobalVirtualGroupResponseAmino): MsgCreateGlobalVirtualGroupResponse;
    toAmino(_: MsgCreateGlobalVirtualGroupResponse): MsgCreateGlobalVirtualGroupResponseAmino;
    fromAminoMsg(object: MsgCreateGlobalVirtualGroupResponseAminoMsg): MsgCreateGlobalVirtualGroupResponse;
    fromProtoMsg(message: MsgCreateGlobalVirtualGroupResponseProtoMsg): MsgCreateGlobalVirtualGroupResponse;
    toProto(message: MsgCreateGlobalVirtualGroupResponse): Uint8Array;
    toProtoMsg(message: MsgCreateGlobalVirtualGroupResponse): MsgCreateGlobalVirtualGroupResponseProtoMsg;
};
export declare const MsgDeleteGlobalVirtualGroup: {
    typeUrl: string;
    encode(message: MsgDeleteGlobalVirtualGroup, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDeleteGlobalVirtualGroup;
    fromJSON(object: any): MsgDeleteGlobalVirtualGroup;
    toJSON(message: MsgDeleteGlobalVirtualGroup): unknown;
    fromPartial<I extends {
        storageProvider?: string;
        globalVirtualGroupId?: number;
    } & {
        storageProvider?: string;
        globalVirtualGroupId?: number;
    } & Record<Exclude<keyof I, keyof MsgDeleteGlobalVirtualGroup>, never>>(object: I): MsgDeleteGlobalVirtualGroup;
    fromSDK(object: MsgDeleteGlobalVirtualGroupSDKType): MsgDeleteGlobalVirtualGroup;
    toSDK(message: MsgDeleteGlobalVirtualGroup): MsgDeleteGlobalVirtualGroupSDKType;
    fromAmino(object: MsgDeleteGlobalVirtualGroupAmino): MsgDeleteGlobalVirtualGroup;
    toAmino(message: MsgDeleteGlobalVirtualGroup): MsgDeleteGlobalVirtualGroupAmino;
    fromAminoMsg(object: MsgDeleteGlobalVirtualGroupAminoMsg): MsgDeleteGlobalVirtualGroup;
    fromProtoMsg(message: MsgDeleteGlobalVirtualGroupProtoMsg): MsgDeleteGlobalVirtualGroup;
    toProto(message: MsgDeleteGlobalVirtualGroup): Uint8Array;
    toProtoMsg(message: MsgDeleteGlobalVirtualGroup): MsgDeleteGlobalVirtualGroupProtoMsg;
};
export declare const MsgDeleteGlobalVirtualGroupResponse: {
    typeUrl: string;
    encode(_: MsgDeleteGlobalVirtualGroupResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDeleteGlobalVirtualGroupResponse;
    fromJSON(_: any): MsgDeleteGlobalVirtualGroupResponse;
    toJSON(_: MsgDeleteGlobalVirtualGroupResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgDeleteGlobalVirtualGroupResponse;
    fromSDK(_: MsgDeleteGlobalVirtualGroupResponseSDKType): MsgDeleteGlobalVirtualGroupResponse;
    toSDK(_: MsgDeleteGlobalVirtualGroupResponse): MsgDeleteGlobalVirtualGroupResponseSDKType;
    fromAmino(_: MsgDeleteGlobalVirtualGroupResponseAmino): MsgDeleteGlobalVirtualGroupResponse;
    toAmino(_: MsgDeleteGlobalVirtualGroupResponse): MsgDeleteGlobalVirtualGroupResponseAmino;
    fromAminoMsg(object: MsgDeleteGlobalVirtualGroupResponseAminoMsg): MsgDeleteGlobalVirtualGroupResponse;
    fromProtoMsg(message: MsgDeleteGlobalVirtualGroupResponseProtoMsg): MsgDeleteGlobalVirtualGroupResponse;
    toProto(message: MsgDeleteGlobalVirtualGroupResponse): Uint8Array;
    toProtoMsg(message: MsgDeleteGlobalVirtualGroupResponse): MsgDeleteGlobalVirtualGroupResponseProtoMsg;
};
export declare const MsgDeposit: {
    typeUrl: string;
    encode(message: MsgDeposit, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDeposit;
    fromJSON(object: any): MsgDeposit;
    toJSON(message: MsgDeposit): unknown;
    fromPartial<I extends {
        storageProvider?: string;
        globalVirtualGroupId?: number;
        deposit?: {
            denom?: string;
            amount?: string;
        };
    } & {
        storageProvider?: string;
        globalVirtualGroupId?: number;
        deposit?: {
            denom?: string;
            amount?: string;
        } & {
            denom?: string;
            amount?: string;
        } & Record<Exclude<keyof I["deposit"], keyof Coin>, never>;
    } & Record<Exclude<keyof I, keyof MsgDeposit>, never>>(object: I): MsgDeposit;
    fromSDK(object: MsgDepositSDKType): MsgDeposit;
    toSDK(message: MsgDeposit): MsgDepositSDKType;
    fromAmino(object: MsgDepositAmino): MsgDeposit;
    toAmino(message: MsgDeposit): MsgDepositAmino;
    fromAminoMsg(object: MsgDepositAminoMsg): MsgDeposit;
    fromProtoMsg(message: MsgDepositProtoMsg): MsgDeposit;
    toProto(message: MsgDeposit): Uint8Array;
    toProtoMsg(message: MsgDeposit): MsgDepositProtoMsg;
};
export declare const MsgDepositResponse: {
    typeUrl: string;
    encode(_: MsgDepositResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgDepositResponse;
    fromJSON(_: any): MsgDepositResponse;
    toJSON(_: MsgDepositResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgDepositResponse;
    fromSDK(_: MsgDepositResponseSDKType): MsgDepositResponse;
    toSDK(_: MsgDepositResponse): MsgDepositResponseSDKType;
    fromAmino(_: MsgDepositResponseAmino): MsgDepositResponse;
    toAmino(_: MsgDepositResponse): MsgDepositResponseAmino;
    fromAminoMsg(object: MsgDepositResponseAminoMsg): MsgDepositResponse;
    fromProtoMsg(message: MsgDepositResponseProtoMsg): MsgDepositResponse;
    toProto(message: MsgDepositResponse): Uint8Array;
    toProtoMsg(message: MsgDepositResponse): MsgDepositResponseProtoMsg;
};
export declare const MsgWithdraw: {
    typeUrl: string;
    encode(message: MsgWithdraw, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgWithdraw;
    fromJSON(object: any): MsgWithdraw;
    toJSON(message: MsgWithdraw): unknown;
    fromPartial<I extends {
        storageProvider?: string;
        globalVirtualGroupId?: number;
        withdraw?: {
            denom?: string;
            amount?: string;
        };
    } & {
        storageProvider?: string;
        globalVirtualGroupId?: number;
        withdraw?: {
            denom?: string;
            amount?: string;
        } & {
            denom?: string;
            amount?: string;
        } & Record<Exclude<keyof I["withdraw"], keyof Coin>, never>;
    } & Record<Exclude<keyof I, keyof MsgWithdraw>, never>>(object: I): MsgWithdraw;
    fromSDK(object: MsgWithdrawSDKType): MsgWithdraw;
    toSDK(message: MsgWithdraw): MsgWithdrawSDKType;
    fromAmino(object: MsgWithdrawAmino): MsgWithdraw;
    toAmino(message: MsgWithdraw): MsgWithdrawAmino;
    fromAminoMsg(object: MsgWithdrawAminoMsg): MsgWithdraw;
    fromProtoMsg(message: MsgWithdrawProtoMsg): MsgWithdraw;
    toProto(message: MsgWithdraw): Uint8Array;
    toProtoMsg(message: MsgWithdraw): MsgWithdrawProtoMsg;
};
export declare const MsgWithdrawResponse: {
    typeUrl: string;
    encode(_: MsgWithdrawResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgWithdrawResponse;
    fromJSON(_: any): MsgWithdrawResponse;
    toJSON(_: MsgWithdrawResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgWithdrawResponse;
    fromSDK(_: MsgWithdrawResponseSDKType): MsgWithdrawResponse;
    toSDK(_: MsgWithdrawResponse): MsgWithdrawResponseSDKType;
    fromAmino(_: MsgWithdrawResponseAmino): MsgWithdrawResponse;
    toAmino(_: MsgWithdrawResponse): MsgWithdrawResponseAmino;
    fromAminoMsg(object: MsgWithdrawResponseAminoMsg): MsgWithdrawResponse;
    fromProtoMsg(message: MsgWithdrawResponseProtoMsg): MsgWithdrawResponse;
    toProto(message: MsgWithdrawResponse): Uint8Array;
    toProtoMsg(message: MsgWithdrawResponse): MsgWithdrawResponseProtoMsg;
};
export declare const MsgSwapOut: {
    typeUrl: string;
    encode(message: MsgSwapOut, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgSwapOut;
    fromJSON(object: any): MsgSwapOut;
    toJSON(message: MsgSwapOut): unknown;
    fromPartial<I extends {
        storageProvider?: string;
        globalVirtualGroupFamilyId?: number;
        globalVirtualGroupIds?: number[];
        successorSpId?: number;
        successorSpApproval?: {
            expiredHeight?: string | number | import("long").Long;
            globalVirtualGroupFamilyId?: number;
            sig?: Uint8Array;
        };
    } & {
        storageProvider?: string;
        globalVirtualGroupFamilyId?: number;
        globalVirtualGroupIds?: number[] & number[] & Record<Exclude<keyof I["globalVirtualGroupIds"], keyof number[]>, never>;
        successorSpId?: number;
        successorSpApproval?: {
            expiredHeight?: string | number | import("long").Long;
            globalVirtualGroupFamilyId?: number;
            sig?: Uint8Array;
        } & {
            expiredHeight?: string | number | (import("long").Long & {
                high: number;
                low: number;
                unsigned: boolean;
                add: (addend: string | number | import("long").Long) => import("long").Long;
                and: (other: string | number | import("long").Long) => import("long").Long;
                compare: (other: string | number | import("long").Long) => number;
                comp: (other: string | number | import("long").Long) => number;
                divide: (divisor: string | number | import("long").Long) => import("long").Long;
                div: (divisor: string | number | import("long").Long) => import("long").Long;
                equals: (other: string | number | import("long").Long) => boolean;
                eq: (other: string | number | import("long").Long) => boolean;
                getHighBits: () => number;
                getHighBitsUnsigned: () => number;
                getLowBits: () => number;
                getLowBitsUnsigned: () => number;
                getNumBitsAbs: () => number;
                greaterThan: (other: string | number | import("long").Long) => boolean;
                gt: (other: string | number | import("long").Long) => boolean;
                greaterThanOrEqual: (other: string | number | import("long").Long) => boolean;
                gte: (other: string | number | import("long").Long) => boolean;
                isEven: () => boolean;
                isNegative: () => boolean;
                isOdd: () => boolean;
                isPositive: () => boolean;
                isZero: () => boolean;
                lessThan: (other: string | number | import("long").Long) => boolean;
                lt: (other: string | number | import("long").Long) => boolean;
                lessThanOrEqual: (other: string | number | import("long").Long) => boolean;
                lte: (other: string | number | import("long").Long) => boolean;
                modulo: (other: string | number | import("long").Long) => import("long").Long;
                mod: (other: string | number | import("long").Long) => import("long").Long;
                multiply: (multiplier: string | number | import("long").Long) => import("long").Long;
                mul: (multiplier: string | number | import("long").Long) => import("long").Long;
                negate: () => import("long").Long;
                neg: () => import("long").Long;
                not: () => import("long").Long;
                notEquals: (other: string | number | import("long").Long) => boolean;
                neq: (other: string | number | import("long").Long) => boolean;
                or: (other: string | number | import("long").Long) => import("long").Long;
                shiftLeft: (numBits: number | import("long").Long) => import("long").Long;
                shl: (numBits: number | import("long").Long) => import("long").Long;
                shiftRight: (numBits: number | import("long").Long) => import("long").Long;
                shr: (numBits: number | import("long").Long) => import("long").Long;
                shiftRightUnsigned: (numBits: number | import("long").Long) => import("long").Long;
                shru: (numBits: number | import("long").Long) => import("long").Long;
                subtract: (subtrahend: string | number | import("long").Long) => import("long").Long;
                sub: (subtrahend: string | number | import("long").Long) => import("long").Long;
                toInt: () => number;
                toNumber: () => number;
                toBytes: (le?: boolean) => number[];
                toBytesLE: () => number[];
                toBytesBE: () => number[];
                toSigned: () => import("long").Long;
                toString: (radix?: number) => string;
                toUnsigned: () => import("long").Long;
                xor: (other: string | number | import("long").Long) => import("long").Long;
            } & Record<Exclude<keyof I["successorSpApproval"]["expiredHeight"], keyof import("long").Long>, never>);
            globalVirtualGroupFamilyId?: number;
            sig?: Uint8Array;
        } & Record<Exclude<keyof I["successorSpApproval"], keyof Approval>, never>;
    } & Record<Exclude<keyof I, keyof MsgSwapOut>, never>>(object: I): MsgSwapOut;
    fromSDK(object: MsgSwapOutSDKType): MsgSwapOut;
    toSDK(message: MsgSwapOut): MsgSwapOutSDKType;
    fromAmino(object: MsgSwapOutAmino): MsgSwapOut;
    toAmino(message: MsgSwapOut): MsgSwapOutAmino;
    fromAminoMsg(object: MsgSwapOutAminoMsg): MsgSwapOut;
    fromProtoMsg(message: MsgSwapOutProtoMsg): MsgSwapOut;
    toProto(message: MsgSwapOut): Uint8Array;
    toProtoMsg(message: MsgSwapOut): MsgSwapOutProtoMsg;
};
export declare const MsgSwapOutResponse: {
    typeUrl: string;
    encode(_: MsgSwapOutResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgSwapOutResponse;
    fromJSON(_: any): MsgSwapOutResponse;
    toJSON(_: MsgSwapOutResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgSwapOutResponse;
    fromSDK(_: MsgSwapOutResponseSDKType): MsgSwapOutResponse;
    toSDK(_: MsgSwapOutResponse): MsgSwapOutResponseSDKType;
    fromAmino(_: MsgSwapOutResponseAmino): MsgSwapOutResponse;
    toAmino(_: MsgSwapOutResponse): MsgSwapOutResponseAmino;
    fromAminoMsg(object: MsgSwapOutResponseAminoMsg): MsgSwapOutResponse;
    fromProtoMsg(message: MsgSwapOutResponseProtoMsg): MsgSwapOutResponse;
    toProto(message: MsgSwapOutResponse): Uint8Array;
    toProtoMsg(message: MsgSwapOutResponse): MsgSwapOutResponseProtoMsg;
};
export declare const MsgCompleteSwapOut: {
    typeUrl: string;
    encode(message: MsgCompleteSwapOut, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgCompleteSwapOut;
    fromJSON(object: any): MsgCompleteSwapOut;
    toJSON(message: MsgCompleteSwapOut): unknown;
    fromPartial<I extends {
        storageProvider?: string;
        globalVirtualGroupFamilyId?: number;
        globalVirtualGroupIds?: number[];
    } & {
        storageProvider?: string;
        globalVirtualGroupFamilyId?: number;
        globalVirtualGroupIds?: number[] & number[] & Record<Exclude<keyof I["globalVirtualGroupIds"], keyof number[]>, never>;
    } & Record<Exclude<keyof I, keyof MsgCompleteSwapOut>, never>>(object: I): MsgCompleteSwapOut;
    fromSDK(object: MsgCompleteSwapOutSDKType): MsgCompleteSwapOut;
    toSDK(message: MsgCompleteSwapOut): MsgCompleteSwapOutSDKType;
    fromAmino(object: MsgCompleteSwapOutAmino): MsgCompleteSwapOut;
    toAmino(message: MsgCompleteSwapOut): MsgCompleteSwapOutAmino;
    fromAminoMsg(object: MsgCompleteSwapOutAminoMsg): MsgCompleteSwapOut;
    fromProtoMsg(message: MsgCompleteSwapOutProtoMsg): MsgCompleteSwapOut;
    toProto(message: MsgCompleteSwapOut): Uint8Array;
    toProtoMsg(message: MsgCompleteSwapOut): MsgCompleteSwapOutProtoMsg;
};
export declare const MsgCompleteSwapOutResponse: {
    typeUrl: string;
    encode(_: MsgCompleteSwapOutResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgCompleteSwapOutResponse;
    fromJSON(_: any): MsgCompleteSwapOutResponse;
    toJSON(_: MsgCompleteSwapOutResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgCompleteSwapOutResponse;
    fromSDK(_: MsgCompleteSwapOutResponseSDKType): MsgCompleteSwapOutResponse;
    toSDK(_: MsgCompleteSwapOutResponse): MsgCompleteSwapOutResponseSDKType;
    fromAmino(_: MsgCompleteSwapOutResponseAmino): MsgCompleteSwapOutResponse;
    toAmino(_: MsgCompleteSwapOutResponse): MsgCompleteSwapOutResponseAmino;
    fromAminoMsg(object: MsgCompleteSwapOutResponseAminoMsg): MsgCompleteSwapOutResponse;
    fromProtoMsg(message: MsgCompleteSwapOutResponseProtoMsg): MsgCompleteSwapOutResponse;
    toProto(message: MsgCompleteSwapOutResponse): Uint8Array;
    toProtoMsg(message: MsgCompleteSwapOutResponse): MsgCompleteSwapOutResponseProtoMsg;
};
export declare const MsgCancelSwapOut: {
    typeUrl: string;
    encode(message: MsgCancelSwapOut, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgCancelSwapOut;
    fromJSON(object: any): MsgCancelSwapOut;
    toJSON(message: MsgCancelSwapOut): unknown;
    fromPartial<I extends {
        storageProvider?: string;
        globalVirtualGroupFamilyId?: number;
        globalVirtualGroupIds?: number[];
    } & {
        storageProvider?: string;
        globalVirtualGroupFamilyId?: number;
        globalVirtualGroupIds?: number[] & number[] & Record<Exclude<keyof I["globalVirtualGroupIds"], keyof number[]>, never>;
    } & Record<Exclude<keyof I, keyof MsgCancelSwapOut>, never>>(object: I): MsgCancelSwapOut;
    fromSDK(object: MsgCancelSwapOutSDKType): MsgCancelSwapOut;
    toSDK(message: MsgCancelSwapOut): MsgCancelSwapOutSDKType;
    fromAmino(object: MsgCancelSwapOutAmino): MsgCancelSwapOut;
    toAmino(message: MsgCancelSwapOut): MsgCancelSwapOutAmino;
    fromAminoMsg(object: MsgCancelSwapOutAminoMsg): MsgCancelSwapOut;
    fromProtoMsg(message: MsgCancelSwapOutProtoMsg): MsgCancelSwapOut;
    toProto(message: MsgCancelSwapOut): Uint8Array;
    toProtoMsg(message: MsgCancelSwapOut): MsgCancelSwapOutProtoMsg;
};
export declare const MsgCancelSwapOutResponse: {
    typeUrl: string;
    encode(_: MsgCancelSwapOutResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgCancelSwapOutResponse;
    fromJSON(_: any): MsgCancelSwapOutResponse;
    toJSON(_: MsgCancelSwapOutResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgCancelSwapOutResponse;
    fromSDK(_: MsgCancelSwapOutResponseSDKType): MsgCancelSwapOutResponse;
    toSDK(_: MsgCancelSwapOutResponse): MsgCancelSwapOutResponseSDKType;
    fromAmino(_: MsgCancelSwapOutResponseAmino): MsgCancelSwapOutResponse;
    toAmino(_: MsgCancelSwapOutResponse): MsgCancelSwapOutResponseAmino;
    fromAminoMsg(object: MsgCancelSwapOutResponseAminoMsg): MsgCancelSwapOutResponse;
    fromProtoMsg(message: MsgCancelSwapOutResponseProtoMsg): MsgCancelSwapOutResponse;
    toProto(message: MsgCancelSwapOutResponse): Uint8Array;
    toProtoMsg(message: MsgCancelSwapOutResponse): MsgCancelSwapOutResponseProtoMsg;
};
export declare const MsgSettle: {
    typeUrl: string;
    encode(message: MsgSettle, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgSettle;
    fromJSON(object: any): MsgSettle;
    toJSON(message: MsgSettle): unknown;
    fromPartial<I extends {
        storageProvider?: string;
        globalVirtualGroupFamilyId?: number;
        globalVirtualGroupIds?: number[];
    } & {
        storageProvider?: string;
        globalVirtualGroupFamilyId?: number;
        globalVirtualGroupIds?: number[] & number[] & Record<Exclude<keyof I["globalVirtualGroupIds"], keyof number[]>, never>;
    } & Record<Exclude<keyof I, keyof MsgSettle>, never>>(object: I): MsgSettle;
    fromSDK(object: MsgSettleSDKType): MsgSettle;
    toSDK(message: MsgSettle): MsgSettleSDKType;
    fromAmino(object: MsgSettleAmino): MsgSettle;
    toAmino(message: MsgSettle): MsgSettleAmino;
    fromAminoMsg(object: MsgSettleAminoMsg): MsgSettle;
    fromProtoMsg(message: MsgSettleProtoMsg): MsgSettle;
    toProto(message: MsgSettle): Uint8Array;
    toProtoMsg(message: MsgSettle): MsgSettleProtoMsg;
};
export declare const MsgSettleResponse: {
    typeUrl: string;
    encode(_: MsgSettleResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgSettleResponse;
    fromJSON(_: any): MsgSettleResponse;
    toJSON(_: MsgSettleResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgSettleResponse;
    fromSDK(_: MsgSettleResponseSDKType): MsgSettleResponse;
    toSDK(_: MsgSettleResponse): MsgSettleResponseSDKType;
    fromAmino(_: MsgSettleResponseAmino): MsgSettleResponse;
    toAmino(_: MsgSettleResponse): MsgSettleResponseAmino;
    fromAminoMsg(object: MsgSettleResponseAminoMsg): MsgSettleResponse;
    fromProtoMsg(message: MsgSettleResponseProtoMsg): MsgSettleResponse;
    toProto(message: MsgSettleResponse): Uint8Array;
    toProtoMsg(message: MsgSettleResponse): MsgSettleResponseProtoMsg;
};
export declare const MsgStorageProviderExit: {
    typeUrl: string;
    encode(message: MsgStorageProviderExit, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgStorageProviderExit;
    fromJSON(object: any): MsgStorageProviderExit;
    toJSON(message: MsgStorageProviderExit): unknown;
    fromPartial<I extends {
        storageProvider?: string;
    } & {
        storageProvider?: string;
    } & Record<Exclude<keyof I, "storageProvider">, never>>(object: I): MsgStorageProviderExit;
    fromSDK(object: MsgStorageProviderExitSDKType): MsgStorageProviderExit;
    toSDK(message: MsgStorageProviderExit): MsgStorageProviderExitSDKType;
    fromAmino(object: MsgStorageProviderExitAmino): MsgStorageProviderExit;
    toAmino(message: MsgStorageProviderExit): MsgStorageProviderExitAmino;
    fromAminoMsg(object: MsgStorageProviderExitAminoMsg): MsgStorageProviderExit;
    fromProtoMsg(message: MsgStorageProviderExitProtoMsg): MsgStorageProviderExit;
    toProto(message: MsgStorageProviderExit): Uint8Array;
    toProtoMsg(message: MsgStorageProviderExit): MsgStorageProviderExitProtoMsg;
};
export declare const MsgStorageProviderExitResponse: {
    typeUrl: string;
    encode(_: MsgStorageProviderExitResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgStorageProviderExitResponse;
    fromJSON(_: any): MsgStorageProviderExitResponse;
    toJSON(_: MsgStorageProviderExitResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgStorageProviderExitResponse;
    fromSDK(_: MsgStorageProviderExitResponseSDKType): MsgStorageProviderExitResponse;
    toSDK(_: MsgStorageProviderExitResponse): MsgStorageProviderExitResponseSDKType;
    fromAmino(_: MsgStorageProviderExitResponseAmino): MsgStorageProviderExitResponse;
    toAmino(_: MsgStorageProviderExitResponse): MsgStorageProviderExitResponseAmino;
    fromAminoMsg(object: MsgStorageProviderExitResponseAminoMsg): MsgStorageProviderExitResponse;
    fromProtoMsg(message: MsgStorageProviderExitResponseProtoMsg): MsgStorageProviderExitResponse;
    toProto(message: MsgStorageProviderExitResponse): Uint8Array;
    toProtoMsg(message: MsgStorageProviderExitResponse): MsgStorageProviderExitResponseProtoMsg;
};
export declare const MsgCompleteStorageProviderExit: {
    typeUrl: string;
    encode(message: MsgCompleteStorageProviderExit, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgCompleteStorageProviderExit;
    fromJSON(object: any): MsgCompleteStorageProviderExit;
    toJSON(message: MsgCompleteStorageProviderExit): unknown;
    fromPartial<I extends {
        storageProvider?: string;
    } & {
        storageProvider?: string;
    } & Record<Exclude<keyof I, "storageProvider">, never>>(object: I): MsgCompleteStorageProviderExit;
    fromSDK(object: MsgCompleteStorageProviderExitSDKType): MsgCompleteStorageProviderExit;
    toSDK(message: MsgCompleteStorageProviderExit): MsgCompleteStorageProviderExitSDKType;
    fromAmino(object: MsgCompleteStorageProviderExitAmino): MsgCompleteStorageProviderExit;
    toAmino(message: MsgCompleteStorageProviderExit): MsgCompleteStorageProviderExitAmino;
    fromAminoMsg(object: MsgCompleteStorageProviderExitAminoMsg): MsgCompleteStorageProviderExit;
    fromProtoMsg(message: MsgCompleteStorageProviderExitProtoMsg): MsgCompleteStorageProviderExit;
    toProto(message: MsgCompleteStorageProviderExit): Uint8Array;
    toProtoMsg(message: MsgCompleteStorageProviderExit): MsgCompleteStorageProviderExitProtoMsg;
};
export declare const MsgCompleteStorageProviderExitResponse: {
    typeUrl: string;
    encode(_: MsgCompleteStorageProviderExitResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MsgCompleteStorageProviderExitResponse;
    fromJSON(_: any): MsgCompleteStorageProviderExitResponse;
    toJSON(_: MsgCompleteStorageProviderExitResponse): unknown;
    fromPartial<I extends {} & {} & Record<Exclude<keyof I, never>, never>>(_: I): MsgCompleteStorageProviderExitResponse;
    fromSDK(_: MsgCompleteStorageProviderExitResponseSDKType): MsgCompleteStorageProviderExitResponse;
    toSDK(_: MsgCompleteStorageProviderExitResponse): MsgCompleteStorageProviderExitResponseSDKType;
    fromAmino(_: MsgCompleteStorageProviderExitResponseAmino): MsgCompleteStorageProviderExitResponse;
    toAmino(_: MsgCompleteStorageProviderExitResponse): MsgCompleteStorageProviderExitResponseAmino;
    fromAminoMsg(object: MsgCompleteStorageProviderExitResponseAminoMsg): MsgCompleteStorageProviderExitResponse;
    fromProtoMsg(message: MsgCompleteStorageProviderExitResponseProtoMsg): MsgCompleteStorageProviderExitResponse;
    toProto(message: MsgCompleteStorageProviderExitResponse): Uint8Array;
    toProtoMsg(message: MsgCompleteStorageProviderExitResponse): MsgCompleteStorageProviderExitResponseProtoMsg;
};
/** Msg defines the Msg service. */
export interface Msg {
    CreateGlobalVirtualGroup(request: MsgCreateGlobalVirtualGroup): Promise<MsgCreateGlobalVirtualGroupResponse>;
    DeleteGlobalVirtualGroup(request: MsgDeleteGlobalVirtualGroup): Promise<MsgDeleteGlobalVirtualGroupResponse>;
    Deposit(request: MsgDeposit): Promise<MsgDepositResponse>;
    Withdraw(request: MsgWithdraw): Promise<MsgWithdrawResponse>;
    SwapOut(request: MsgSwapOut): Promise<MsgSwapOutResponse>;
    Settle(request: MsgSettle): Promise<MsgSettleResponse>;
    /** Since: cosmos-sdk 0.47 */
    UpdateParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse>;
    StorageProviderExit(request: MsgStorageProviderExit): Promise<MsgStorageProviderExitResponse>;
    CompleteStorageProviderExit(request: MsgCompleteStorageProviderExit): Promise<MsgCompleteStorageProviderExitResponse>;
    CompleteSwapOut(request: MsgCompleteSwapOut): Promise<MsgCompleteSwapOutResponse>;
    CancelSwapOut(request: MsgCancelSwapOut): Promise<MsgCancelSwapOutResponse>;
}
export declare class MsgClientImpl implements Msg {
    private readonly rpc;
    constructor(rpc: Rpc);
    CreateGlobalVirtualGroup(request: MsgCreateGlobalVirtualGroup): Promise<MsgCreateGlobalVirtualGroupResponse>;
    DeleteGlobalVirtualGroup(request: MsgDeleteGlobalVirtualGroup): Promise<MsgDeleteGlobalVirtualGroupResponse>;
    Deposit(request: MsgDeposit): Promise<MsgDepositResponse>;
    Withdraw(request: MsgWithdraw): Promise<MsgWithdrawResponse>;
    SwapOut(request: MsgSwapOut): Promise<MsgSwapOutResponse>;
    Settle(request: MsgSettle): Promise<MsgSettleResponse>;
    UpdateParams(request: MsgUpdateParams): Promise<MsgUpdateParamsResponse>;
    StorageProviderExit(request: MsgStorageProviderExit): Promise<MsgStorageProviderExitResponse>;
    CompleteStorageProviderExit(request: MsgCompleteStorageProviderExit): Promise<MsgCompleteStorageProviderExitResponse>;
    CompleteSwapOut(request: MsgCompleteSwapOut): Promise<MsgCompleteSwapOutResponse>;
    CancelSwapOut(request: MsgCancelSwapOut): Promise<MsgCancelSwapOutResponse>;
}
