import * as _m0 from "protobufjs/minimal";
export declare const protobufPackage = "greenfield.bridge";
/** Params defines the parameters for the module. */
export interface Params {
    /** Relayer fee for the cross chain transfer out tx to bsc */
    bscTransferOutRelayerFee: string;
    /** Relayer fee for the ACK or FAIL_ACK package of the cross chain transfer out tx to bsc */
    bscTransferOutAckRelayerFee: string;
}
export interface ParamsProtoMsg {
    typeUrl: "/greenfield.bridge.Params";
    value: Uint8Array;
}
/** Params defines the parameters for the module. */
export interface ParamsAmino {
    /** Relayer fee for the cross chain transfer out tx to bsc */
    bsc_transfer_out_relayer_fee?: string;
    /** Relayer fee for the ACK or FAIL_ACK package of the cross chain transfer out tx to bsc */
    bsc_transfer_out_ack_relayer_fee?: string;
}
export interface ParamsAminoMsg {
    type: "/greenfield.bridge.Params";
    value: ParamsAmino;
}
/** Params defines the parameters for the module. */
export interface ParamsSDKType {
    bsc_transfer_out_relayer_fee: string;
    bsc_transfer_out_ack_relayer_fee: string;
}
export declare const Params: {
    typeUrl: string;
    encode(message: Params, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): Params;
    fromJSON(object: any): Params;
    toJSON(message: Params): unknown;
    fromPartial<I extends {
        bscTransferOutRelayerFee?: string;
        bscTransferOutAckRelayerFee?: string;
    } & {
        bscTransferOutRelayerFee?: string;
        bscTransferOutAckRelayerFee?: string;
    } & Record<Exclude<keyof I, keyof Params>, never>>(object: I): Params;
    fromSDK(object: ParamsSDKType): Params;
    toSDK(message: Params): ParamsSDKType;
    fromAmino(object: ParamsAmino): Params;
    toAmino(message: Params): ParamsAmino;
    fromAminoMsg(object: ParamsAminoMsg): Params;
    fromProtoMsg(message: ParamsProtoMsg): Params;
    toProto(message: Params): Uint8Array;
    toProtoMsg(message: Params): ParamsProtoMsg;
};
