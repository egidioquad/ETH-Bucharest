import { MsgCreateBucket, MsgDeleteBucket, MsgUpdateBucketInfo, MsgMirrorBucket, MsgDiscontinueBucket, MsgCreateObject, MsgSealObject, MsgRejectSealObject, MsgCopyObject, MsgDeleteObject, MsgCancelCreateObject, MsgMirrorObject, MsgDiscontinueObject, MsgUpdateObjectInfo, MsgCreateGroup, MsgDeleteGroup, MsgUpdateGroupMember, MsgUpdateGroupExtra, MsgLeaveGroup, MsgMirrorGroup, MsgRenewGroupMember, MsgPutPolicy, MsgDeletePolicy, MsgUpdateParams, MsgMigrateBucket, MsgCompleteMigrateBucket, MsgCancelMigrateBucket, MsgRejectMigrateBucket, MsgSetTag } from "./tx";
export declare const AminoConverter: {
    "/greenfield.storage.MsgCreateBucket": {
        aminoType: string;
        toAmino: (message: MsgCreateBucket) => import("./tx").MsgCreateBucketAmino;
        fromAmino: (object: import("./tx").MsgCreateBucketAmino) => MsgCreateBucket;
    };
    "/greenfield.storage.MsgDeleteBucket": {
        aminoType: string;
        toAmino: (message: MsgDeleteBucket) => import("./tx").MsgDeleteBucketAmino;
        fromAmino: (object: import("./tx").MsgDeleteBucketAmino) => MsgDeleteBucket;
    };
    "/greenfield.storage.MsgUpdateBucketInfo": {
        aminoType: string;
        toAmino: (message: MsgUpdateBucketInfo) => import("./tx").MsgUpdateBucketInfoAmino;
        fromAmino: (object: import("./tx").MsgUpdateBucketInfoAmino) => MsgUpdateBucketInfo;
    };
    "/greenfield.storage.MsgMirrorBucket": {
        aminoType: string;
        toAmino: (message: MsgMirrorBucket) => import("./tx").MsgMirrorBucketAmino;
        fromAmino: (object: import("./tx").MsgMirrorBucketAmino) => MsgMirrorBucket;
    };
    "/greenfield.storage.MsgDiscontinueBucket": {
        aminoType: string;
        toAmino: (message: MsgDiscontinueBucket) => import("./tx").MsgDiscontinueBucketAmino;
        fromAmino: (object: import("./tx").MsgDiscontinueBucketAmino) => MsgDiscontinueBucket;
    };
    "/greenfield.storage.MsgCreateObject": {
        aminoType: string;
        toAmino: (message: MsgCreateObject) => import("./tx").MsgCreateObjectAmino;
        fromAmino: (object: import("./tx").MsgCreateObjectAmino) => MsgCreateObject;
    };
    "/greenfield.storage.MsgSealObject": {
        aminoType: string;
        toAmino: (message: MsgSealObject) => import("./tx").MsgSealObjectAmino;
        fromAmino: (object: import("./tx").MsgSealObjectAmino) => MsgSealObject;
    };
    "/greenfield.storage.MsgRejectSealObject": {
        aminoType: string;
        toAmino: (message: MsgRejectSealObject) => import("./tx").MsgRejectSealObjectAmino;
        fromAmino: (object: import("./tx").MsgRejectSealObjectAmino) => MsgRejectSealObject;
    };
    "/greenfield.storage.MsgCopyObject": {
        aminoType: string;
        toAmino: (message: MsgCopyObject) => import("./tx").MsgCopyObjectAmino;
        fromAmino: (object: import("./tx").MsgCopyObjectAmino) => MsgCopyObject;
    };
    "/greenfield.storage.MsgDeleteObject": {
        aminoType: string;
        toAmino: (message: MsgDeleteObject) => import("./tx").MsgDeleteObjectAmino;
        fromAmino: (object: import("./tx").MsgDeleteObjectAmino) => MsgDeleteObject;
    };
    "/greenfield.storage.MsgCancelCreateObject": {
        aminoType: string;
        toAmino: (message: MsgCancelCreateObject) => import("./tx").MsgCancelCreateObjectAmino;
        fromAmino: (object: import("./tx").MsgCancelCreateObjectAmino) => MsgCancelCreateObject;
    };
    "/greenfield.storage.MsgMirrorObject": {
        aminoType: string;
        toAmino: (message: MsgMirrorObject) => import("./tx").MsgMirrorObjectAmino;
        fromAmino: (object: import("./tx").MsgMirrorObjectAmino) => MsgMirrorObject;
    };
    "/greenfield.storage.MsgDiscontinueObject": {
        aminoType: string;
        toAmino: (message: MsgDiscontinueObject) => import("./tx").MsgDiscontinueObjectAmino;
        fromAmino: (object: import("./tx").MsgDiscontinueObjectAmino) => MsgDiscontinueObject;
    };
    "/greenfield.storage.MsgUpdateObjectInfo": {
        aminoType: string;
        toAmino: (message: MsgUpdateObjectInfo) => import("./tx").MsgUpdateObjectInfoAmino;
        fromAmino: (object: import("./tx").MsgUpdateObjectInfoAmino) => MsgUpdateObjectInfo;
    };
    "/greenfield.storage.MsgCreateGroup": {
        aminoType: string;
        toAmino: (message: MsgCreateGroup) => import("./tx").MsgCreateGroupAmino;
        fromAmino: (object: import("./tx").MsgCreateGroupAmino) => MsgCreateGroup;
    };
    "/greenfield.storage.MsgDeleteGroup": {
        aminoType: string;
        toAmino: (message: MsgDeleteGroup) => import("./tx").MsgDeleteGroupAmino;
        fromAmino: (object: import("./tx").MsgDeleteGroupAmino) => MsgDeleteGroup;
    };
    "/greenfield.storage.MsgUpdateGroupMember": {
        aminoType: string;
        toAmino: (message: MsgUpdateGroupMember) => import("./tx").MsgUpdateGroupMemberAmino;
        fromAmino: (object: import("./tx").MsgUpdateGroupMemberAmino) => MsgUpdateGroupMember;
    };
    "/greenfield.storage.MsgUpdateGroupExtra": {
        aminoType: string;
        toAmino: (message: MsgUpdateGroupExtra) => import("./tx").MsgUpdateGroupExtraAmino;
        fromAmino: (object: import("./tx").MsgUpdateGroupExtraAmino) => MsgUpdateGroupExtra;
    };
    "/greenfield.storage.MsgLeaveGroup": {
        aminoType: string;
        toAmino: (message: MsgLeaveGroup) => import("./tx").MsgLeaveGroupAmino;
        fromAmino: (object: import("./tx").MsgLeaveGroupAmino) => MsgLeaveGroup;
    };
    "/greenfield.storage.MsgMirrorGroup": {
        aminoType: string;
        toAmino: (message: MsgMirrorGroup) => import("./tx").MsgMirrorGroupAmino;
        fromAmino: (object: import("./tx").MsgMirrorGroupAmino) => MsgMirrorGroup;
    };
    "/greenfield.storage.MsgRenewGroupMember": {
        aminoType: string;
        toAmino: (message: MsgRenewGroupMember) => import("./tx").MsgRenewGroupMemberAmino;
        fromAmino: (object: import("./tx").MsgRenewGroupMemberAmino) => MsgRenewGroupMember;
    };
    "/greenfield.storage.MsgPutPolicy": {
        aminoType: string;
        toAmino: (message: MsgPutPolicy) => import("./tx").MsgPutPolicyAmino;
        fromAmino: (object: import("./tx").MsgPutPolicyAmino) => MsgPutPolicy;
    };
    "/greenfield.storage.MsgDeletePolicy": {
        aminoType: string;
        toAmino: (message: MsgDeletePolicy) => import("./tx").MsgDeletePolicyAmino;
        fromAmino: (object: import("./tx").MsgDeletePolicyAmino) => MsgDeletePolicy;
    };
    "/greenfield.storage.MsgUpdateParams": {
        aminoType: string;
        toAmino: (message: MsgUpdateParams) => import("./tx").MsgUpdateParamsAmino;
        fromAmino: (object: import("./tx").MsgUpdateParamsAmino) => MsgUpdateParams;
    };
    "/greenfield.storage.MsgMigrateBucket": {
        aminoType: string;
        toAmino: (message: MsgMigrateBucket) => import("./tx").MsgMigrateBucketAmino;
        fromAmino: (object: import("./tx").MsgMigrateBucketAmino) => MsgMigrateBucket;
    };
    "/greenfield.storage.MsgCompleteMigrateBucket": {
        aminoType: string;
        toAmino: (message: MsgCompleteMigrateBucket) => import("./tx").MsgCompleteMigrateBucketAmino;
        fromAmino: (object: import("./tx").MsgCompleteMigrateBucketAmino) => MsgCompleteMigrateBucket;
    };
    "/greenfield.storage.MsgCancelMigrateBucket": {
        aminoType: string;
        toAmino: (message: MsgCancelMigrateBucket) => import("./tx").MsgCancelMigrateBucketAmino;
        fromAmino: (object: import("./tx").MsgCancelMigrateBucketAmino) => MsgCancelMigrateBucket;
    };
    "/greenfield.storage.MsgRejectMigrateBucket": {
        aminoType: string;
        toAmino: (message: MsgRejectMigrateBucket) => import("./tx").MsgRejectMigrateBucketAmino;
        fromAmino: (object: import("./tx").MsgRejectMigrateBucketAmino) => MsgRejectMigrateBucket;
    };
    "/greenfield.storage.MsgSetTag": {
        aminoType: string;
        toAmino: (message: MsgSetTag) => import("./tx").MsgSetTagAmino;
        fromAmino: (object: import("./tx").MsgSetTagAmino) => MsgSetTag;
    };
};
