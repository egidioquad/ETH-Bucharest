import { GeneratedType } from "@cosmjs/proto-signing";
import { MsgCreateBucket, MsgDeleteBucket, MsgUpdateBucketInfo, MsgMirrorBucket, MsgDiscontinueBucket, MsgCreateObject, MsgSealObject, MsgRejectSealObject, MsgCopyObject, MsgDeleteObject, MsgCancelCreateObject, MsgMirrorObject, MsgDiscontinueObject, MsgUpdateObjectInfo, MsgCreateGroup, MsgDeleteGroup, MsgUpdateGroupMember, MsgUpdateGroupExtra, MsgLeaveGroup, MsgMirrorGroup, MsgRenewGroupMember, MsgPutPolicy, MsgDeletePolicy, MsgUpdateParams, MsgMigrateBucket, MsgCompleteMigrateBucket, MsgCancelMigrateBucket, MsgRejectMigrateBucket, MsgSetTag } from "./tx";
export declare const registry: ReadonlyArray<[string, GeneratedType]>;
export declare const load: (protoRegistry: Registry) => void;
export declare const MessageComposer: {
    encoded: {
        createBucket(value: MsgCreateBucket): {
            typeUrl: string;
            value: Uint8Array;
        };
        deleteBucket(value: MsgDeleteBucket): {
            typeUrl: string;
            value: Uint8Array;
        };
        updateBucketInfo(value: MsgUpdateBucketInfo): {
            typeUrl: string;
            value: Uint8Array;
        };
        mirrorBucket(value: MsgMirrorBucket): {
            typeUrl: string;
            value: Uint8Array;
        };
        discontinueBucket(value: MsgDiscontinueBucket): {
            typeUrl: string;
            value: Uint8Array;
        };
        createObject(value: MsgCreateObject): {
            typeUrl: string;
            value: Uint8Array;
        };
        sealObject(value: MsgSealObject): {
            typeUrl: string;
            value: Uint8Array;
        };
        rejectSealObject(value: MsgRejectSealObject): {
            typeUrl: string;
            value: Uint8Array;
        };
        copyObject(value: MsgCopyObject): {
            typeUrl: string;
            value: Uint8Array;
        };
        deleteObject(value: MsgDeleteObject): {
            typeUrl: string;
            value: Uint8Array;
        };
        cancelCreateObject(value: MsgCancelCreateObject): {
            typeUrl: string;
            value: Uint8Array;
        };
        mirrorObject(value: MsgMirrorObject): {
            typeUrl: string;
            value: Uint8Array;
        };
        discontinueObject(value: MsgDiscontinueObject): {
            typeUrl: string;
            value: Uint8Array;
        };
        updateObjectInfo(value: MsgUpdateObjectInfo): {
            typeUrl: string;
            value: Uint8Array;
        };
        createGroup(value: MsgCreateGroup): {
            typeUrl: string;
            value: Uint8Array;
        };
        deleteGroup(value: MsgDeleteGroup): {
            typeUrl: string;
            value: Uint8Array;
        };
        updateGroupMember(value: MsgUpdateGroupMember): {
            typeUrl: string;
            value: Uint8Array;
        };
        updateGroupExtra(value: MsgUpdateGroupExtra): {
            typeUrl: string;
            value: Uint8Array;
        };
        leaveGroup(value: MsgLeaveGroup): {
            typeUrl: string;
            value: Uint8Array;
        };
        mirrorGroup(value: MsgMirrorGroup): {
            typeUrl: string;
            value: Uint8Array;
        };
        renewGroupMember(value: MsgRenewGroupMember): {
            typeUrl: string;
            value: Uint8Array;
        };
        putPolicy(value: MsgPutPolicy): {
            typeUrl: string;
            value: Uint8Array;
        };
        deletePolicy(value: MsgDeletePolicy): {
            typeUrl: string;
            value: Uint8Array;
        };
        updateParams(value: MsgUpdateParams): {
            typeUrl: string;
            value: Uint8Array;
        };
        migrateBucket(value: MsgMigrateBucket): {
            typeUrl: string;
            value: Uint8Array;
        };
        completeMigrateBucket(value: MsgCompleteMigrateBucket): {
            typeUrl: string;
            value: Uint8Array;
        };
        cancelMigrateBucket(value: MsgCancelMigrateBucket): {
            typeUrl: string;
            value: Uint8Array;
        };
        rejectMigrateBucket(value: MsgRejectMigrateBucket): {
            typeUrl: string;
            value: Uint8Array;
        };
        setTag(value: MsgSetTag): {
            typeUrl: string;
            value: Uint8Array;
        };
    };
    withTypeUrl: {
        createBucket(value: MsgCreateBucket): {
            typeUrl: string;
            value: MsgCreateBucket;
        };
        deleteBucket(value: MsgDeleteBucket): {
            typeUrl: string;
            value: MsgDeleteBucket;
        };
        updateBucketInfo(value: MsgUpdateBucketInfo): {
            typeUrl: string;
            value: MsgUpdateBucketInfo;
        };
        mirrorBucket(value: MsgMirrorBucket): {
            typeUrl: string;
            value: MsgMirrorBucket;
        };
        discontinueBucket(value: MsgDiscontinueBucket): {
            typeUrl: string;
            value: MsgDiscontinueBucket;
        };
        createObject(value: MsgCreateObject): {
            typeUrl: string;
            value: MsgCreateObject;
        };
        sealObject(value: MsgSealObject): {
            typeUrl: string;
            value: MsgSealObject;
        };
        rejectSealObject(value: MsgRejectSealObject): {
            typeUrl: string;
            value: MsgRejectSealObject;
        };
        copyObject(value: MsgCopyObject): {
            typeUrl: string;
            value: MsgCopyObject;
        };
        deleteObject(value: MsgDeleteObject): {
            typeUrl: string;
            value: MsgDeleteObject;
        };
        cancelCreateObject(value: MsgCancelCreateObject): {
            typeUrl: string;
            value: MsgCancelCreateObject;
        };
        mirrorObject(value: MsgMirrorObject): {
            typeUrl: string;
            value: MsgMirrorObject;
        };
        discontinueObject(value: MsgDiscontinueObject): {
            typeUrl: string;
            value: MsgDiscontinueObject;
        };
        updateObjectInfo(value: MsgUpdateObjectInfo): {
            typeUrl: string;
            value: MsgUpdateObjectInfo;
        };
        createGroup(value: MsgCreateGroup): {
            typeUrl: string;
            value: MsgCreateGroup;
        };
        deleteGroup(value: MsgDeleteGroup): {
            typeUrl: string;
            value: MsgDeleteGroup;
        };
        updateGroupMember(value: MsgUpdateGroupMember): {
            typeUrl: string;
            value: MsgUpdateGroupMember;
        };
        updateGroupExtra(value: MsgUpdateGroupExtra): {
            typeUrl: string;
            value: MsgUpdateGroupExtra;
        };
        leaveGroup(value: MsgLeaveGroup): {
            typeUrl: string;
            value: MsgLeaveGroup;
        };
        mirrorGroup(value: MsgMirrorGroup): {
            typeUrl: string;
            value: MsgMirrorGroup;
        };
        renewGroupMember(value: MsgRenewGroupMember): {
            typeUrl: string;
            value: MsgRenewGroupMember;
        };
        putPolicy(value: MsgPutPolicy): {
            typeUrl: string;
            value: MsgPutPolicy;
        };
        deletePolicy(value: MsgDeletePolicy): {
            typeUrl: string;
            value: MsgDeletePolicy;
        };
        updateParams(value: MsgUpdateParams): {
            typeUrl: string;
            value: MsgUpdateParams;
        };
        migrateBucket(value: MsgMigrateBucket): {
            typeUrl: string;
            value: MsgMigrateBucket;
        };
        completeMigrateBucket(value: MsgCompleteMigrateBucket): {
            typeUrl: string;
            value: MsgCompleteMigrateBucket;
        };
        cancelMigrateBucket(value: MsgCancelMigrateBucket): {
            typeUrl: string;
            value: MsgCancelMigrateBucket;
        };
        rejectMigrateBucket(value: MsgRejectMigrateBucket): {
            typeUrl: string;
            value: MsgRejectMigrateBucket;
        };
        setTag(value: MsgSetTag): {
            typeUrl: string;
            value: MsgSetTag;
        };
    };
    toJSON: {
        createBucket(value: MsgCreateBucket): {
            typeUrl: string;
            value: unknown;
        };
        deleteBucket(value: MsgDeleteBucket): {
            typeUrl: string;
            value: unknown;
        };
        updateBucketInfo(value: MsgUpdateBucketInfo): {
            typeUrl: string;
            value: unknown;
        };
        mirrorBucket(value: MsgMirrorBucket): {
            typeUrl: string;
            value: unknown;
        };
        discontinueBucket(value: MsgDiscontinueBucket): {
            typeUrl: string;
            value: unknown;
        };
        createObject(value: MsgCreateObject): {
            typeUrl: string;
            value: unknown;
        };
        sealObject(value: MsgSealObject): {
            typeUrl: string;
            value: unknown;
        };
        rejectSealObject(value: MsgRejectSealObject): {
            typeUrl: string;
            value: unknown;
        };
        copyObject(value: MsgCopyObject): {
            typeUrl: string;
            value: unknown;
        };
        deleteObject(value: MsgDeleteObject): {
            typeUrl: string;
            value: unknown;
        };
        cancelCreateObject(value: MsgCancelCreateObject): {
            typeUrl: string;
            value: unknown;
        };
        mirrorObject(value: MsgMirrorObject): {
            typeUrl: string;
            value: unknown;
        };
        discontinueObject(value: MsgDiscontinueObject): {
            typeUrl: string;
            value: unknown;
        };
        updateObjectInfo(value: MsgUpdateObjectInfo): {
            typeUrl: string;
            value: unknown;
        };
        createGroup(value: MsgCreateGroup): {
            typeUrl: string;
            value: unknown;
        };
        deleteGroup(value: MsgDeleteGroup): {
            typeUrl: string;
            value: unknown;
        };
        updateGroupMember(value: MsgUpdateGroupMember): {
            typeUrl: string;
            value: unknown;
        };
        updateGroupExtra(value: MsgUpdateGroupExtra): {
            typeUrl: string;
            value: unknown;
        };
        leaveGroup(value: MsgLeaveGroup): {
            typeUrl: string;
            value: unknown;
        };
        mirrorGroup(value: MsgMirrorGroup): {
            typeUrl: string;
            value: unknown;
        };
        renewGroupMember(value: MsgRenewGroupMember): {
            typeUrl: string;
            value: unknown;
        };
        putPolicy(value: MsgPutPolicy): {
            typeUrl: string;
            value: unknown;
        };
        deletePolicy(value: MsgDeletePolicy): {
            typeUrl: string;
            value: unknown;
        };
        updateParams(value: MsgUpdateParams): {
            typeUrl: string;
            value: unknown;
        };
        migrateBucket(value: MsgMigrateBucket): {
            typeUrl: string;
            value: unknown;
        };
        completeMigrateBucket(value: MsgCompleteMigrateBucket): {
            typeUrl: string;
            value: unknown;
        };
        cancelMigrateBucket(value: MsgCancelMigrateBucket): {
            typeUrl: string;
            value: unknown;
        };
        rejectMigrateBucket(value: MsgRejectMigrateBucket): {
            typeUrl: string;
            value: unknown;
        };
        setTag(value: MsgSetTag): {
            typeUrl: string;
            value: unknown;
        };
    };
    fromJSON: {
        createBucket(value: any): {
            typeUrl: string;
            value: MsgCreateBucket;
        };
        deleteBucket(value: any): {
            typeUrl: string;
            value: MsgDeleteBucket;
        };
        updateBucketInfo(value: any): {
            typeUrl: string;
            value: MsgUpdateBucketInfo;
        };
        mirrorBucket(value: any): {
            typeUrl: string;
            value: MsgMirrorBucket;
        };
        discontinueBucket(value: any): {
            typeUrl: string;
            value: MsgDiscontinueBucket;
        };
        createObject(value: any): {
            typeUrl: string;
            value: MsgCreateObject;
        };
        sealObject(value: any): {
            typeUrl: string;
            value: MsgSealObject;
        };
        rejectSealObject(value: any): {
            typeUrl: string;
            value: MsgRejectSealObject;
        };
        copyObject(value: any): {
            typeUrl: string;
            value: MsgCopyObject;
        };
        deleteObject(value: any): {
            typeUrl: string;
            value: MsgDeleteObject;
        };
        cancelCreateObject(value: any): {
            typeUrl: string;
            value: MsgCancelCreateObject;
        };
        mirrorObject(value: any): {
            typeUrl: string;
            value: MsgMirrorObject;
        };
        discontinueObject(value: any): {
            typeUrl: string;
            value: MsgDiscontinueObject;
        };
        updateObjectInfo(value: any): {
            typeUrl: string;
            value: MsgUpdateObjectInfo;
        };
        createGroup(value: any): {
            typeUrl: string;
            value: MsgCreateGroup;
        };
        deleteGroup(value: any): {
            typeUrl: string;
            value: MsgDeleteGroup;
        };
        updateGroupMember(value: any): {
            typeUrl: string;
            value: MsgUpdateGroupMember;
        };
        updateGroupExtra(value: any): {
            typeUrl: string;
            value: MsgUpdateGroupExtra;
        };
        leaveGroup(value: any): {
            typeUrl: string;
            value: MsgLeaveGroup;
        };
        mirrorGroup(value: any): {
            typeUrl: string;
            value: MsgMirrorGroup;
        };
        renewGroupMember(value: any): {
            typeUrl: string;
            value: MsgRenewGroupMember;
        };
        putPolicy(value: any): {
            typeUrl: string;
            value: MsgPutPolicy;
        };
        deletePolicy(value: any): {
            typeUrl: string;
            value: MsgDeletePolicy;
        };
        updateParams(value: any): {
            typeUrl: string;
            value: MsgUpdateParams;
        };
        migrateBucket(value: any): {
            typeUrl: string;
            value: MsgMigrateBucket;
        };
        completeMigrateBucket(value: any): {
            typeUrl: string;
            value: MsgCompleteMigrateBucket;
        };
        cancelMigrateBucket(value: any): {
            typeUrl: string;
            value: MsgCancelMigrateBucket;
        };
        rejectMigrateBucket(value: any): {
            typeUrl: string;
            value: MsgRejectMigrateBucket;
        };
        setTag(value: any): {
            typeUrl: string;
            value: MsgSetTag;
        };
    };
    fromPartial: {
        createBucket(value: MsgCreateBucket): {
            typeUrl: string;
            value: MsgCreateBucket;
        };
        deleteBucket(value: MsgDeleteBucket): {
            typeUrl: string;
            value: MsgDeleteBucket;
        };
        updateBucketInfo(value: MsgUpdateBucketInfo): {
            typeUrl: string;
            value: MsgUpdateBucketInfo;
        };
        mirrorBucket(value: MsgMirrorBucket): {
            typeUrl: string;
            value: MsgMirrorBucket;
        };
        discontinueBucket(value: MsgDiscontinueBucket): {
            typeUrl: string;
            value: MsgDiscontinueBucket;
        };
        createObject(value: MsgCreateObject): {
            typeUrl: string;
            value: MsgCreateObject;
        };
        sealObject(value: MsgSealObject): {
            typeUrl: string;
            value: MsgSealObject;
        };
        rejectSealObject(value: MsgRejectSealObject): {
            typeUrl: string;
            value: MsgRejectSealObject;
        };
        copyObject(value: MsgCopyObject): {
            typeUrl: string;
            value: MsgCopyObject;
        };
        deleteObject(value: MsgDeleteObject): {
            typeUrl: string;
            value: MsgDeleteObject;
        };
        cancelCreateObject(value: MsgCancelCreateObject): {
            typeUrl: string;
            value: MsgCancelCreateObject;
        };
        mirrorObject(value: MsgMirrorObject): {
            typeUrl: string;
            value: MsgMirrorObject;
        };
        discontinueObject(value: MsgDiscontinueObject): {
            typeUrl: string;
            value: MsgDiscontinueObject;
        };
        updateObjectInfo(value: MsgUpdateObjectInfo): {
            typeUrl: string;
            value: MsgUpdateObjectInfo;
        };
        createGroup(value: MsgCreateGroup): {
            typeUrl: string;
            value: MsgCreateGroup;
        };
        deleteGroup(value: MsgDeleteGroup): {
            typeUrl: string;
            value: MsgDeleteGroup;
        };
        updateGroupMember(value: MsgUpdateGroupMember): {
            typeUrl: string;
            value: MsgUpdateGroupMember;
        };
        updateGroupExtra(value: MsgUpdateGroupExtra): {
            typeUrl: string;
            value: MsgUpdateGroupExtra;
        };
        leaveGroup(value: MsgLeaveGroup): {
            typeUrl: string;
            value: MsgLeaveGroup;
        };
        mirrorGroup(value: MsgMirrorGroup): {
            typeUrl: string;
            value: MsgMirrorGroup;
        };
        renewGroupMember(value: MsgRenewGroupMember): {
            typeUrl: string;
            value: MsgRenewGroupMember;
        };
        putPolicy(value: MsgPutPolicy): {
            typeUrl: string;
            value: MsgPutPolicy;
        };
        deletePolicy(value: MsgDeletePolicy): {
            typeUrl: string;
            value: MsgDeletePolicy;
        };
        updateParams(value: MsgUpdateParams): {
            typeUrl: string;
            value: MsgUpdateParams;
        };
        migrateBucket(value: MsgMigrateBucket): {
            typeUrl: string;
            value: MsgMigrateBucket;
        };
        completeMigrateBucket(value: MsgCompleteMigrateBucket): {
            typeUrl: string;
            value: MsgCompleteMigrateBucket;
        };
        cancelMigrateBucket(value: MsgCancelMigrateBucket): {
            typeUrl: string;
            value: MsgCancelMigrateBucket;
        };
        rejectMigrateBucket(value: MsgRejectMigrateBucket): {
            typeUrl: string;
            value: MsgRejectMigrateBucket;
        };
        setTag(value: MsgSetTag): {
            typeUrl: string;
            value: MsgSetTag;
        };
    };
};
