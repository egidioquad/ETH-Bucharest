"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageComposer = exports.load = exports.registry = void 0;
const tx_1 = require("./tx");
exports.registry = [["/greenfield.storage.MsgCreateBucket", tx_1.MsgCreateBucket], ["/greenfield.storage.MsgDeleteBucket", tx_1.MsgDeleteBucket], ["/greenfield.storage.MsgUpdateBucketInfo", tx_1.MsgUpdateBucketInfo], ["/greenfield.storage.MsgMirrorBucket", tx_1.MsgMirrorBucket], ["/greenfield.storage.MsgDiscontinueBucket", tx_1.MsgDiscontinueBucket], ["/greenfield.storage.MsgCreateObject", tx_1.MsgCreateObject], ["/greenfield.storage.MsgSealObject", tx_1.MsgSealObject], ["/greenfield.storage.MsgRejectSealObject", tx_1.MsgRejectSealObject], ["/greenfield.storage.MsgCopyObject", tx_1.MsgCopyObject], ["/greenfield.storage.MsgDeleteObject", tx_1.MsgDeleteObject], ["/greenfield.storage.MsgCancelCreateObject", tx_1.MsgCancelCreateObject], ["/greenfield.storage.MsgMirrorObject", tx_1.MsgMirrorObject], ["/greenfield.storage.MsgDiscontinueObject", tx_1.MsgDiscontinueObject], ["/greenfield.storage.MsgUpdateObjectInfo", tx_1.MsgUpdateObjectInfo], ["/greenfield.storage.MsgCreateGroup", tx_1.MsgCreateGroup], ["/greenfield.storage.MsgDeleteGroup", tx_1.MsgDeleteGroup], ["/greenfield.storage.MsgUpdateGroupMember", tx_1.MsgUpdateGroupMember], ["/greenfield.storage.MsgUpdateGroupExtra", tx_1.MsgUpdateGroupExtra], ["/greenfield.storage.MsgLeaveGroup", tx_1.MsgLeaveGroup], ["/greenfield.storage.MsgMirrorGroup", tx_1.MsgMirrorGroup], ["/greenfield.storage.MsgRenewGroupMember", tx_1.MsgRenewGroupMember], ["/greenfield.storage.MsgPutPolicy", tx_1.MsgPutPolicy], ["/greenfield.storage.MsgDeletePolicy", tx_1.MsgDeletePolicy], ["/greenfield.storage.MsgUpdateParams", tx_1.MsgUpdateParams], ["/greenfield.storage.MsgMigrateBucket", tx_1.MsgMigrateBucket], ["/greenfield.storage.MsgCompleteMigrateBucket", tx_1.MsgCompleteMigrateBucket], ["/greenfield.storage.MsgCancelMigrateBucket", tx_1.MsgCancelMigrateBucket], ["/greenfield.storage.MsgRejectMigrateBucket", tx_1.MsgRejectMigrateBucket], ["/greenfield.storage.MsgSetTag", tx_1.MsgSetTag]];
const load = (protoRegistry) => {
    exports.registry.forEach(([typeUrl, mod]) => {
        protoRegistry.register(typeUrl, mod);
    });
};
exports.load = load;
exports.MessageComposer = {
    encoded: {
        createBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateBucket",
                value: tx_1.MsgCreateBucket.encode(value).finish()
            };
        },
        deleteBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteBucket",
                value: tx_1.MsgDeleteBucket.encode(value).finish()
            };
        },
        updateBucketInfo(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateBucketInfo",
                value: tx_1.MsgUpdateBucketInfo.encode(value).finish()
            };
        },
        mirrorBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorBucket",
                value: tx_1.MsgMirrorBucket.encode(value).finish()
            };
        },
        discontinueBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDiscontinueBucket",
                value: tx_1.MsgDiscontinueBucket.encode(value).finish()
            };
        },
        createObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateObject",
                value: tx_1.MsgCreateObject.encode(value).finish()
            };
        },
        sealObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgSealObject",
                value: tx_1.MsgSealObject.encode(value).finish()
            };
        },
        rejectSealObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRejectSealObject",
                value: tx_1.MsgRejectSealObject.encode(value).finish()
            };
        },
        copyObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCopyObject",
                value: tx_1.MsgCopyObject.encode(value).finish()
            };
        },
        deleteObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteObject",
                value: tx_1.MsgDeleteObject.encode(value).finish()
            };
        },
        cancelCreateObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCancelCreateObject",
                value: tx_1.MsgCancelCreateObject.encode(value).finish()
            };
        },
        mirrorObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorObject",
                value: tx_1.MsgMirrorObject.encode(value).finish()
            };
        },
        discontinueObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDiscontinueObject",
                value: tx_1.MsgDiscontinueObject.encode(value).finish()
            };
        },
        updateObjectInfo(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateObjectInfo",
                value: tx_1.MsgUpdateObjectInfo.encode(value).finish()
            };
        },
        createGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateGroup",
                value: tx_1.MsgCreateGroup.encode(value).finish()
            };
        },
        deleteGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteGroup",
                value: tx_1.MsgDeleteGroup.encode(value).finish()
            };
        },
        updateGroupMember(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateGroupMember",
                value: tx_1.MsgUpdateGroupMember.encode(value).finish()
            };
        },
        updateGroupExtra(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateGroupExtra",
                value: tx_1.MsgUpdateGroupExtra.encode(value).finish()
            };
        },
        leaveGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgLeaveGroup",
                value: tx_1.MsgLeaveGroup.encode(value).finish()
            };
        },
        mirrorGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorGroup",
                value: tx_1.MsgMirrorGroup.encode(value).finish()
            };
        },
        renewGroupMember(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRenewGroupMember",
                value: tx_1.MsgRenewGroupMember.encode(value).finish()
            };
        },
        putPolicy(value) {
            return {
                typeUrl: "/greenfield.storage.MsgPutPolicy",
                value: tx_1.MsgPutPolicy.encode(value).finish()
            };
        },
        deletePolicy(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeletePolicy",
                value: tx_1.MsgDeletePolicy.encode(value).finish()
            };
        },
        updateParams(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateParams",
                value: tx_1.MsgUpdateParams.encode(value).finish()
            };
        },
        migrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMigrateBucket",
                value: tx_1.MsgMigrateBucket.encode(value).finish()
            };
        },
        completeMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCompleteMigrateBucket",
                value: tx_1.MsgCompleteMigrateBucket.encode(value).finish()
            };
        },
        cancelMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCancelMigrateBucket",
                value: tx_1.MsgCancelMigrateBucket.encode(value).finish()
            };
        },
        rejectMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRejectMigrateBucket",
                value: tx_1.MsgRejectMigrateBucket.encode(value).finish()
            };
        },
        setTag(value) {
            return {
                typeUrl: "/greenfield.storage.MsgSetTag",
                value: tx_1.MsgSetTag.encode(value).finish()
            };
        }
    },
    withTypeUrl: {
        createBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateBucket",
                value
            };
        },
        deleteBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteBucket",
                value
            };
        },
        updateBucketInfo(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateBucketInfo",
                value
            };
        },
        mirrorBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorBucket",
                value
            };
        },
        discontinueBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDiscontinueBucket",
                value
            };
        },
        createObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateObject",
                value
            };
        },
        sealObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgSealObject",
                value
            };
        },
        rejectSealObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRejectSealObject",
                value
            };
        },
        copyObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCopyObject",
                value
            };
        },
        deleteObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteObject",
                value
            };
        },
        cancelCreateObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCancelCreateObject",
                value
            };
        },
        mirrorObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorObject",
                value
            };
        },
        discontinueObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDiscontinueObject",
                value
            };
        },
        updateObjectInfo(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateObjectInfo",
                value
            };
        },
        createGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateGroup",
                value
            };
        },
        deleteGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteGroup",
                value
            };
        },
        updateGroupMember(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateGroupMember",
                value
            };
        },
        updateGroupExtra(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateGroupExtra",
                value
            };
        },
        leaveGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgLeaveGroup",
                value
            };
        },
        mirrorGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorGroup",
                value
            };
        },
        renewGroupMember(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRenewGroupMember",
                value
            };
        },
        putPolicy(value) {
            return {
                typeUrl: "/greenfield.storage.MsgPutPolicy",
                value
            };
        },
        deletePolicy(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeletePolicy",
                value
            };
        },
        updateParams(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateParams",
                value
            };
        },
        migrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMigrateBucket",
                value
            };
        },
        completeMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCompleteMigrateBucket",
                value
            };
        },
        cancelMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCancelMigrateBucket",
                value
            };
        },
        rejectMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRejectMigrateBucket",
                value
            };
        },
        setTag(value) {
            return {
                typeUrl: "/greenfield.storage.MsgSetTag",
                value
            };
        }
    },
    toJSON: {
        createBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateBucket",
                value: tx_1.MsgCreateBucket.toJSON(value)
            };
        },
        deleteBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteBucket",
                value: tx_1.MsgDeleteBucket.toJSON(value)
            };
        },
        updateBucketInfo(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateBucketInfo",
                value: tx_1.MsgUpdateBucketInfo.toJSON(value)
            };
        },
        mirrorBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorBucket",
                value: tx_1.MsgMirrorBucket.toJSON(value)
            };
        },
        discontinueBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDiscontinueBucket",
                value: tx_1.MsgDiscontinueBucket.toJSON(value)
            };
        },
        createObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateObject",
                value: tx_1.MsgCreateObject.toJSON(value)
            };
        },
        sealObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgSealObject",
                value: tx_1.MsgSealObject.toJSON(value)
            };
        },
        rejectSealObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRejectSealObject",
                value: tx_1.MsgRejectSealObject.toJSON(value)
            };
        },
        copyObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCopyObject",
                value: tx_1.MsgCopyObject.toJSON(value)
            };
        },
        deleteObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteObject",
                value: tx_1.MsgDeleteObject.toJSON(value)
            };
        },
        cancelCreateObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCancelCreateObject",
                value: tx_1.MsgCancelCreateObject.toJSON(value)
            };
        },
        mirrorObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorObject",
                value: tx_1.MsgMirrorObject.toJSON(value)
            };
        },
        discontinueObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDiscontinueObject",
                value: tx_1.MsgDiscontinueObject.toJSON(value)
            };
        },
        updateObjectInfo(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateObjectInfo",
                value: tx_1.MsgUpdateObjectInfo.toJSON(value)
            };
        },
        createGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateGroup",
                value: tx_1.MsgCreateGroup.toJSON(value)
            };
        },
        deleteGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteGroup",
                value: tx_1.MsgDeleteGroup.toJSON(value)
            };
        },
        updateGroupMember(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateGroupMember",
                value: tx_1.MsgUpdateGroupMember.toJSON(value)
            };
        },
        updateGroupExtra(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateGroupExtra",
                value: tx_1.MsgUpdateGroupExtra.toJSON(value)
            };
        },
        leaveGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgLeaveGroup",
                value: tx_1.MsgLeaveGroup.toJSON(value)
            };
        },
        mirrorGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorGroup",
                value: tx_1.MsgMirrorGroup.toJSON(value)
            };
        },
        renewGroupMember(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRenewGroupMember",
                value: tx_1.MsgRenewGroupMember.toJSON(value)
            };
        },
        putPolicy(value) {
            return {
                typeUrl: "/greenfield.storage.MsgPutPolicy",
                value: tx_1.MsgPutPolicy.toJSON(value)
            };
        },
        deletePolicy(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeletePolicy",
                value: tx_1.MsgDeletePolicy.toJSON(value)
            };
        },
        updateParams(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateParams",
                value: tx_1.MsgUpdateParams.toJSON(value)
            };
        },
        migrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMigrateBucket",
                value: tx_1.MsgMigrateBucket.toJSON(value)
            };
        },
        completeMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCompleteMigrateBucket",
                value: tx_1.MsgCompleteMigrateBucket.toJSON(value)
            };
        },
        cancelMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCancelMigrateBucket",
                value: tx_1.MsgCancelMigrateBucket.toJSON(value)
            };
        },
        rejectMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRejectMigrateBucket",
                value: tx_1.MsgRejectMigrateBucket.toJSON(value)
            };
        },
        setTag(value) {
            return {
                typeUrl: "/greenfield.storage.MsgSetTag",
                value: tx_1.MsgSetTag.toJSON(value)
            };
        }
    },
    fromJSON: {
        createBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateBucket",
                value: tx_1.MsgCreateBucket.fromJSON(value)
            };
        },
        deleteBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteBucket",
                value: tx_1.MsgDeleteBucket.fromJSON(value)
            };
        },
        updateBucketInfo(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateBucketInfo",
                value: tx_1.MsgUpdateBucketInfo.fromJSON(value)
            };
        },
        mirrorBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorBucket",
                value: tx_1.MsgMirrorBucket.fromJSON(value)
            };
        },
        discontinueBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDiscontinueBucket",
                value: tx_1.MsgDiscontinueBucket.fromJSON(value)
            };
        },
        createObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateObject",
                value: tx_1.MsgCreateObject.fromJSON(value)
            };
        },
        sealObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgSealObject",
                value: tx_1.MsgSealObject.fromJSON(value)
            };
        },
        rejectSealObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRejectSealObject",
                value: tx_1.MsgRejectSealObject.fromJSON(value)
            };
        },
        copyObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCopyObject",
                value: tx_1.MsgCopyObject.fromJSON(value)
            };
        },
        deleteObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteObject",
                value: tx_1.MsgDeleteObject.fromJSON(value)
            };
        },
        cancelCreateObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCancelCreateObject",
                value: tx_1.MsgCancelCreateObject.fromJSON(value)
            };
        },
        mirrorObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorObject",
                value: tx_1.MsgMirrorObject.fromJSON(value)
            };
        },
        discontinueObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDiscontinueObject",
                value: tx_1.MsgDiscontinueObject.fromJSON(value)
            };
        },
        updateObjectInfo(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateObjectInfo",
                value: tx_1.MsgUpdateObjectInfo.fromJSON(value)
            };
        },
        createGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateGroup",
                value: tx_1.MsgCreateGroup.fromJSON(value)
            };
        },
        deleteGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteGroup",
                value: tx_1.MsgDeleteGroup.fromJSON(value)
            };
        },
        updateGroupMember(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateGroupMember",
                value: tx_1.MsgUpdateGroupMember.fromJSON(value)
            };
        },
        updateGroupExtra(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateGroupExtra",
                value: tx_1.MsgUpdateGroupExtra.fromJSON(value)
            };
        },
        leaveGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgLeaveGroup",
                value: tx_1.MsgLeaveGroup.fromJSON(value)
            };
        },
        mirrorGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorGroup",
                value: tx_1.MsgMirrorGroup.fromJSON(value)
            };
        },
        renewGroupMember(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRenewGroupMember",
                value: tx_1.MsgRenewGroupMember.fromJSON(value)
            };
        },
        putPolicy(value) {
            return {
                typeUrl: "/greenfield.storage.MsgPutPolicy",
                value: tx_1.MsgPutPolicy.fromJSON(value)
            };
        },
        deletePolicy(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeletePolicy",
                value: tx_1.MsgDeletePolicy.fromJSON(value)
            };
        },
        updateParams(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateParams",
                value: tx_1.MsgUpdateParams.fromJSON(value)
            };
        },
        migrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMigrateBucket",
                value: tx_1.MsgMigrateBucket.fromJSON(value)
            };
        },
        completeMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCompleteMigrateBucket",
                value: tx_1.MsgCompleteMigrateBucket.fromJSON(value)
            };
        },
        cancelMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCancelMigrateBucket",
                value: tx_1.MsgCancelMigrateBucket.fromJSON(value)
            };
        },
        rejectMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRejectMigrateBucket",
                value: tx_1.MsgRejectMigrateBucket.fromJSON(value)
            };
        },
        setTag(value) {
            return {
                typeUrl: "/greenfield.storage.MsgSetTag",
                value: tx_1.MsgSetTag.fromJSON(value)
            };
        }
    },
    fromPartial: {
        createBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateBucket",
                value: tx_1.MsgCreateBucket.fromPartial(value)
            };
        },
        deleteBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteBucket",
                value: tx_1.MsgDeleteBucket.fromPartial(value)
            };
        },
        updateBucketInfo(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateBucketInfo",
                value: tx_1.MsgUpdateBucketInfo.fromPartial(value)
            };
        },
        mirrorBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorBucket",
                value: tx_1.MsgMirrorBucket.fromPartial(value)
            };
        },
        discontinueBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDiscontinueBucket",
                value: tx_1.MsgDiscontinueBucket.fromPartial(value)
            };
        },
        createObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateObject",
                value: tx_1.MsgCreateObject.fromPartial(value)
            };
        },
        sealObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgSealObject",
                value: tx_1.MsgSealObject.fromPartial(value)
            };
        },
        rejectSealObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRejectSealObject",
                value: tx_1.MsgRejectSealObject.fromPartial(value)
            };
        },
        copyObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCopyObject",
                value: tx_1.MsgCopyObject.fromPartial(value)
            };
        },
        deleteObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteObject",
                value: tx_1.MsgDeleteObject.fromPartial(value)
            };
        },
        cancelCreateObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCancelCreateObject",
                value: tx_1.MsgCancelCreateObject.fromPartial(value)
            };
        },
        mirrorObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorObject",
                value: tx_1.MsgMirrorObject.fromPartial(value)
            };
        },
        discontinueObject(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDiscontinueObject",
                value: tx_1.MsgDiscontinueObject.fromPartial(value)
            };
        },
        updateObjectInfo(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateObjectInfo",
                value: tx_1.MsgUpdateObjectInfo.fromPartial(value)
            };
        },
        createGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCreateGroup",
                value: tx_1.MsgCreateGroup.fromPartial(value)
            };
        },
        deleteGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeleteGroup",
                value: tx_1.MsgDeleteGroup.fromPartial(value)
            };
        },
        updateGroupMember(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateGroupMember",
                value: tx_1.MsgUpdateGroupMember.fromPartial(value)
            };
        },
        updateGroupExtra(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateGroupExtra",
                value: tx_1.MsgUpdateGroupExtra.fromPartial(value)
            };
        },
        leaveGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgLeaveGroup",
                value: tx_1.MsgLeaveGroup.fromPartial(value)
            };
        },
        mirrorGroup(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMirrorGroup",
                value: tx_1.MsgMirrorGroup.fromPartial(value)
            };
        },
        renewGroupMember(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRenewGroupMember",
                value: tx_1.MsgRenewGroupMember.fromPartial(value)
            };
        },
        putPolicy(value) {
            return {
                typeUrl: "/greenfield.storage.MsgPutPolicy",
                value: tx_1.MsgPutPolicy.fromPartial(value)
            };
        },
        deletePolicy(value) {
            return {
                typeUrl: "/greenfield.storage.MsgDeletePolicy",
                value: tx_1.MsgDeletePolicy.fromPartial(value)
            };
        },
        updateParams(value) {
            return {
                typeUrl: "/greenfield.storage.MsgUpdateParams",
                value: tx_1.MsgUpdateParams.fromPartial(value)
            };
        },
        migrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgMigrateBucket",
                value: tx_1.MsgMigrateBucket.fromPartial(value)
            };
        },
        completeMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCompleteMigrateBucket",
                value: tx_1.MsgCompleteMigrateBucket.fromPartial(value)
            };
        },
        cancelMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgCancelMigrateBucket",
                value: tx_1.MsgCancelMigrateBucket.fromPartial(value)
            };
        },
        rejectMigrateBucket(value) {
            return {
                typeUrl: "/greenfield.storage.MsgRejectMigrateBucket",
                value: tx_1.MsgRejectMigrateBucket.fromPartial(value)
            };
        },
        setTag(value) {
            return {
                typeUrl: "/greenfield.storage.MsgSetTag",
                value: tx_1.MsgSetTag.fromPartial(value)
            };
        }
    }
};
//# sourceMappingURL=tx.registry.js.map