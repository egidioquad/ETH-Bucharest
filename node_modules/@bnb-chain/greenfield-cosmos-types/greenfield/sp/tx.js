"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgClientImpl = exports.MsgUpdateStorageProviderStatusResponse = exports.MsgUpdateStorageProviderStatus = exports.MsgUpdateParamsResponse = exports.MsgUpdateParams = exports.MsgUpdateSpStoragePriceResponse = exports.MsgUpdateSpStoragePrice = exports.MsgEditStorageProviderResponse = exports.MsgEditStorageProvider = exports.MsgDepositResponse = exports.MsgDeposit = exports.MsgCreateStorageProviderResponse = exports.MsgCreateStorageProvider = exports.protobufPackage = void 0;
//@ts-nocheck
/* eslint-disable */
const types_1 = require("./types");
const coin_1 = require("../../cosmos/base/v1beta1/coin");
const params_1 = require("./params");
const helpers_1 = require("../../helpers");
const _m0 = __importStar(require("protobufjs/minimal"));
const math_1 = require("@cosmjs/math");
exports.protobufPackage = "greenfield.sp";
function createBaseMsgCreateStorageProvider() {
    return {
        creator: "",
        description: types_1.Description.fromPartial({}),
        spAddress: "",
        fundingAddress: "",
        sealAddress: "",
        approvalAddress: "",
        gcAddress: "",
        maintenanceAddress: "",
        endpoint: "",
        deposit: coin_1.Coin.fromPartial({}),
        readPrice: "",
        freeReadQuota: helpers_1.Long.UZERO,
        storePrice: "",
        blsKey: "",
        blsProof: ""
    };
}
exports.MsgCreateStorageProvider = {
    typeUrl: "/greenfield.sp.MsgCreateStorageProvider",
    encode(message, writer = _m0.Writer.create()) {
        if (message.creator !== "") {
            writer.uint32(10).string(message.creator);
        }
        if (message.description !== undefined) {
            types_1.Description.encode(message.description, writer.uint32(18).fork()).ldelim();
        }
        if (message.spAddress !== "") {
            writer.uint32(26).string(message.spAddress);
        }
        if (message.fundingAddress !== "") {
            writer.uint32(34).string(message.fundingAddress);
        }
        if (message.sealAddress !== "") {
            writer.uint32(42).string(message.sealAddress);
        }
        if (message.approvalAddress !== "") {
            writer.uint32(50).string(message.approvalAddress);
        }
        if (message.gcAddress !== "") {
            writer.uint32(58).string(message.gcAddress);
        }
        if (message.maintenanceAddress !== "") {
            writer.uint32(66).string(message.maintenanceAddress);
        }
        if (message.endpoint !== "") {
            writer.uint32(74).string(message.endpoint);
        }
        if (message.deposit !== undefined) {
            coin_1.Coin.encode(message.deposit, writer.uint32(82).fork()).ldelim();
        }
        if (message.readPrice !== "") {
            writer.uint32(90).string(math_1.Decimal.fromUserInput(message.readPrice, 18).atomics);
        }
        if (!message.freeReadQuota.isZero()) {
            writer.uint32(96).uint64(message.freeReadQuota);
        }
        if (message.storePrice !== "") {
            writer.uint32(106).string(math_1.Decimal.fromUserInput(message.storePrice, 18).atomics);
        }
        if (message.blsKey !== "") {
            writer.uint32(114).string(message.blsKey);
        }
        if (message.blsProof !== "") {
            writer.uint32(122).string(message.blsProof);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateStorageProvider();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.creator = reader.string();
                    break;
                case 2:
                    message.description = types_1.Description.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.spAddress = reader.string();
                    break;
                case 4:
                    message.fundingAddress = reader.string();
                    break;
                case 5:
                    message.sealAddress = reader.string();
                    break;
                case 6:
                    message.approvalAddress = reader.string();
                    break;
                case 7:
                    message.gcAddress = reader.string();
                    break;
                case 8:
                    message.maintenanceAddress = reader.string();
                    break;
                case 9:
                    message.endpoint = reader.string();
                    break;
                case 10:
                    message.deposit = coin_1.Coin.decode(reader, reader.uint32());
                    break;
                case 11:
                    message.readPrice = math_1.Decimal.fromAtomics(reader.string(), 18).toString();
                    break;
                case 12:
                    message.freeReadQuota = reader.uint64();
                    break;
                case 13:
                    message.storePrice = math_1.Decimal.fromAtomics(reader.string(), 18).toString();
                    break;
                case 14:
                    message.blsKey = reader.string();
                    break;
                case 15:
                    message.blsProof = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            creator: (0, helpers_1.isSet)(object.creator) ? String(object.creator) : "",
            description: (0, helpers_1.isSet)(object.description) ? types_1.Description.fromJSON(object.description) : undefined,
            spAddress: (0, helpers_1.isSet)(object.spAddress) ? String(object.spAddress) : "",
            fundingAddress: (0, helpers_1.isSet)(object.fundingAddress) ? String(object.fundingAddress) : "",
            sealAddress: (0, helpers_1.isSet)(object.sealAddress) ? String(object.sealAddress) : "",
            approvalAddress: (0, helpers_1.isSet)(object.approvalAddress) ? String(object.approvalAddress) : "",
            gcAddress: (0, helpers_1.isSet)(object.gcAddress) ? String(object.gcAddress) : "",
            maintenanceAddress: (0, helpers_1.isSet)(object.maintenanceAddress) ? String(object.maintenanceAddress) : "",
            endpoint: (0, helpers_1.isSet)(object.endpoint) ? String(object.endpoint) : "",
            deposit: (0, helpers_1.isSet)(object.deposit) ? coin_1.Coin.fromJSON(object.deposit) : undefined,
            readPrice: (0, helpers_1.isSet)(object.readPrice) ? String(object.readPrice) : "",
            freeReadQuota: (0, helpers_1.isSet)(object.freeReadQuota) ? helpers_1.Long.fromValue(object.freeReadQuota) : helpers_1.Long.UZERO,
            storePrice: (0, helpers_1.isSet)(object.storePrice) ? String(object.storePrice) : "",
            blsKey: (0, helpers_1.isSet)(object.blsKey) ? String(object.blsKey) : "",
            blsProof: (0, helpers_1.isSet)(object.blsProof) ? String(object.blsProof) : ""
        };
    },
    toJSON(message) {
        const obj = {};
        message.creator !== undefined && (obj.creator = message.creator);
        message.description !== undefined && (obj.description = message.description ? types_1.Description.toJSON(message.description) : undefined);
        message.spAddress !== undefined && (obj.spAddress = message.spAddress);
        message.fundingAddress !== undefined && (obj.fundingAddress = message.fundingAddress);
        message.sealAddress !== undefined && (obj.sealAddress = message.sealAddress);
        message.approvalAddress !== undefined && (obj.approvalAddress = message.approvalAddress);
        message.gcAddress !== undefined && (obj.gcAddress = message.gcAddress);
        message.maintenanceAddress !== undefined && (obj.maintenanceAddress = message.maintenanceAddress);
        message.endpoint !== undefined && (obj.endpoint = message.endpoint);
        message.deposit !== undefined && (obj.deposit = message.deposit ? coin_1.Coin.toJSON(message.deposit) : undefined);
        message.readPrice !== undefined && (obj.readPrice = message.readPrice);
        message.freeReadQuota !== undefined && (obj.freeReadQuota = (message.freeReadQuota || helpers_1.Long.UZERO).toString());
        message.storePrice !== undefined && (obj.storePrice = message.storePrice);
        message.blsKey !== undefined && (obj.blsKey = message.blsKey);
        message.blsProof !== undefined && (obj.blsProof = message.blsProof);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMsgCreateStorageProvider();
        message.creator = object.creator ?? "";
        message.description = object.description !== undefined && object.description !== null ? types_1.Description.fromPartial(object.description) : undefined;
        message.spAddress = object.spAddress ?? "";
        message.fundingAddress = object.fundingAddress ?? "";
        message.sealAddress = object.sealAddress ?? "";
        message.approvalAddress = object.approvalAddress ?? "";
        message.gcAddress = object.gcAddress ?? "";
        message.maintenanceAddress = object.maintenanceAddress ?? "";
        message.endpoint = object.endpoint ?? "";
        message.deposit = object.deposit !== undefined && object.deposit !== null ? coin_1.Coin.fromPartial(object.deposit) : undefined;
        message.readPrice = object.readPrice ?? "";
        message.freeReadQuota = object.freeReadQuota !== undefined && object.freeReadQuota !== null ? helpers_1.Long.fromValue(object.freeReadQuota) : helpers_1.Long.UZERO;
        message.storePrice = object.storePrice ?? "";
        message.blsKey = object.blsKey ?? "";
        message.blsProof = object.blsProof ?? "";
        return message;
    },
    fromSDK(object) {
        return {
            creator: object?.creator,
            description: object.description ? types_1.Description.fromSDK(object.description) : undefined,
            spAddress: object?.sp_address,
            fundingAddress: object?.funding_address,
            sealAddress: object?.seal_address,
            approvalAddress: object?.approval_address,
            gcAddress: object?.gc_address,
            maintenanceAddress: object?.maintenance_address,
            endpoint: object?.endpoint,
            deposit: object.deposit ? coin_1.Coin.fromSDK(object.deposit) : undefined,
            readPrice: object?.read_price,
            freeReadQuota: object?.free_read_quota,
            storePrice: object?.store_price,
            blsKey: object?.bls_key,
            blsProof: object?.bls_proof
        };
    },
    toSDK(message) {
        const obj = {};
        obj.creator = message.creator;
        message.description !== undefined && (obj.description = message.description ? types_1.Description.toSDK(message.description) : undefined);
        obj.sp_address = message.spAddress;
        obj.funding_address = message.fundingAddress;
        obj.seal_address = message.sealAddress;
        obj.approval_address = message.approvalAddress;
        obj.gc_address = message.gcAddress;
        obj.maintenance_address = message.maintenanceAddress;
        obj.endpoint = message.endpoint;
        message.deposit !== undefined && (obj.deposit = message.deposit ? coin_1.Coin.toSDK(message.deposit) : undefined);
        obj.read_price = message.readPrice;
        obj.free_read_quota = message.freeReadQuota;
        obj.store_price = message.storePrice;
        obj.bls_key = message.blsKey;
        obj.bls_proof = message.blsProof;
        return obj;
    },
    fromAmino(object) {
        const message = createBaseMsgCreateStorageProvider();
        if (object.creator !== undefined && object.creator !== null) {
            message.creator = object.creator;
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = types_1.Description.fromAmino(object.description);
        }
        if (object.sp_address !== undefined && object.sp_address !== null) {
            message.spAddress = object.sp_address;
        }
        if (object.funding_address !== undefined && object.funding_address !== null) {
            message.fundingAddress = object.funding_address;
        }
        if (object.seal_address !== undefined && object.seal_address !== null) {
            message.sealAddress = object.seal_address;
        }
        if (object.approval_address !== undefined && object.approval_address !== null) {
            message.approvalAddress = object.approval_address;
        }
        if (object.gc_address !== undefined && object.gc_address !== null) {
            message.gcAddress = object.gc_address;
        }
        if (object.maintenance_address !== undefined && object.maintenance_address !== null) {
            message.maintenanceAddress = object.maintenance_address;
        }
        if (object.endpoint !== undefined && object.endpoint !== null) {
            message.endpoint = object.endpoint;
        }
        if (object.deposit !== undefined && object.deposit !== null) {
            message.deposit = coin_1.Coin.fromAmino(object.deposit);
        }
        if (object.read_price !== undefined && object.read_price !== null) {
            message.readPrice = object.read_price;
        }
        if (object.free_read_quota !== undefined && object.free_read_quota !== null) {
            message.freeReadQuota = helpers_1.Long.fromString(object.free_read_quota);
        }
        if (object.store_price !== undefined && object.store_price !== null) {
            message.storePrice = object.store_price;
        }
        if (object.bls_key !== undefined && object.bls_key !== null) {
            message.blsKey = object.bls_key;
        }
        if (object.bls_proof !== undefined && object.bls_proof !== null) {
            message.blsProof = object.bls_proof;
        }
        return message;
    },
    toAmino(message) {
        const obj = {};
        obj.creator = message.creator;
        obj.description = message.description ? types_1.Description.toAmino(message.description) : undefined;
        obj.sp_address = message.spAddress;
        obj.funding_address = message.fundingAddress;
        obj.seal_address = message.sealAddress;
        obj.approval_address = message.approvalAddress;
        obj.gc_address = message.gcAddress;
        obj.maintenance_address = message.maintenanceAddress;
        obj.endpoint = message.endpoint;
        obj.deposit = message.deposit ? coin_1.Coin.toAmino(message.deposit) : undefined;
        obj.read_price = message.readPrice;
        obj.free_read_quota = message.freeReadQuota ? message.freeReadQuota.toString() : undefined;
        obj.store_price = message.storePrice;
        obj.bls_key = message.blsKey;
        obj.bls_proof = message.blsProof;
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgCreateStorageProvider.fromAmino(object.value);
    },
    fromProtoMsg(message) {
        return exports.MsgCreateStorageProvider.decode(message.value);
    },
    toProto(message) {
        return exports.MsgCreateStorageProvider.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/greenfield.sp.MsgCreateStorageProvider",
            value: exports.MsgCreateStorageProvider.encode(message).finish()
        };
    }
};
function createBaseMsgCreateStorageProviderResponse() {
    return {};
}
exports.MsgCreateStorageProviderResponse = {
    typeUrl: "/greenfield.sp.MsgCreateStorageProviderResponse",
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgCreateStorageProviderResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    fromPartial(_) {
        const message = createBaseMsgCreateStorageProviderResponse();
        return message;
    },
    fromSDK(_) {
        return {};
    },
    toSDK(_) {
        const obj = {};
        return obj;
    },
    fromAmino(_) {
        const message = createBaseMsgCreateStorageProviderResponse();
        return message;
    },
    toAmino(_) {
        const obj = {};
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgCreateStorageProviderResponse.fromAmino(object.value);
    },
    fromProtoMsg(message) {
        return exports.MsgCreateStorageProviderResponse.decode(message.value);
    },
    toProto(message) {
        return exports.MsgCreateStorageProviderResponse.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/greenfield.sp.MsgCreateStorageProviderResponse",
            value: exports.MsgCreateStorageProviderResponse.encode(message).finish()
        };
    }
};
function createBaseMsgDeposit() {
    return {
        creator: "",
        spAddress: "",
        deposit: coin_1.Coin.fromPartial({})
    };
}
exports.MsgDeposit = {
    typeUrl: "/greenfield.sp.MsgDeposit",
    encode(message, writer = _m0.Writer.create()) {
        if (message.creator !== "") {
            writer.uint32(10).string(message.creator);
        }
        if (message.spAddress !== "") {
            writer.uint32(18).string(message.spAddress);
        }
        if (message.deposit !== undefined) {
            coin_1.Coin.encode(message.deposit, writer.uint32(26).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgDeposit();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.creator = reader.string();
                    break;
                case 2:
                    message.spAddress = reader.string();
                    break;
                case 3:
                    message.deposit = coin_1.Coin.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            creator: (0, helpers_1.isSet)(object.creator) ? String(object.creator) : "",
            spAddress: (0, helpers_1.isSet)(object.spAddress) ? String(object.spAddress) : "",
            deposit: (0, helpers_1.isSet)(object.deposit) ? coin_1.Coin.fromJSON(object.deposit) : undefined
        };
    },
    toJSON(message) {
        const obj = {};
        message.creator !== undefined && (obj.creator = message.creator);
        message.spAddress !== undefined && (obj.spAddress = message.spAddress);
        message.deposit !== undefined && (obj.deposit = message.deposit ? coin_1.Coin.toJSON(message.deposit) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMsgDeposit();
        message.creator = object.creator ?? "";
        message.spAddress = object.spAddress ?? "";
        message.deposit = object.deposit !== undefined && object.deposit !== null ? coin_1.Coin.fromPartial(object.deposit) : undefined;
        return message;
    },
    fromSDK(object) {
        return {
            creator: object?.creator,
            spAddress: object?.sp_address,
            deposit: object.deposit ? coin_1.Coin.fromSDK(object.deposit) : undefined
        };
    },
    toSDK(message) {
        const obj = {};
        obj.creator = message.creator;
        obj.sp_address = message.spAddress;
        message.deposit !== undefined && (obj.deposit = message.deposit ? coin_1.Coin.toSDK(message.deposit) : undefined);
        return obj;
    },
    fromAmino(object) {
        const message = createBaseMsgDeposit();
        if (object.creator !== undefined && object.creator !== null) {
            message.creator = object.creator;
        }
        if (object.sp_address !== undefined && object.sp_address !== null) {
            message.spAddress = object.sp_address;
        }
        if (object.deposit !== undefined && object.deposit !== null) {
            message.deposit = coin_1.Coin.fromAmino(object.deposit);
        }
        return message;
    },
    toAmino(message) {
        const obj = {};
        obj.creator = message.creator;
        obj.sp_address = message.spAddress;
        obj.deposit = message.deposit ? coin_1.Coin.toAmino(message.deposit) : undefined;
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgDeposit.fromAmino(object.value);
    },
    fromProtoMsg(message) {
        return exports.MsgDeposit.decode(message.value);
    },
    toProto(message) {
        return exports.MsgDeposit.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/greenfield.sp.MsgDeposit",
            value: exports.MsgDeposit.encode(message).finish()
        };
    }
};
function createBaseMsgDepositResponse() {
    return {};
}
exports.MsgDepositResponse = {
    typeUrl: "/greenfield.sp.MsgDepositResponse",
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgDepositResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    fromPartial(_) {
        const message = createBaseMsgDepositResponse();
        return message;
    },
    fromSDK(_) {
        return {};
    },
    toSDK(_) {
        const obj = {};
        return obj;
    },
    fromAmino(_) {
        const message = createBaseMsgDepositResponse();
        return message;
    },
    toAmino(_) {
        const obj = {};
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgDepositResponse.fromAmino(object.value);
    },
    fromProtoMsg(message) {
        return exports.MsgDepositResponse.decode(message.value);
    },
    toProto(message) {
        return exports.MsgDepositResponse.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/greenfield.sp.MsgDepositResponse",
            value: exports.MsgDepositResponse.encode(message).finish()
        };
    }
};
function createBaseMsgEditStorageProvider() {
    return {
        spAddress: "",
        endpoint: "",
        description: undefined,
        sealAddress: "",
        approvalAddress: "",
        gcAddress: "",
        maintenanceAddress: "",
        blsKey: "",
        blsProof: ""
    };
}
exports.MsgEditStorageProvider = {
    typeUrl: "/greenfield.sp.MsgEditStorageProvider",
    encode(message, writer = _m0.Writer.create()) {
        if (message.spAddress !== "") {
            writer.uint32(10).string(message.spAddress);
        }
        if (message.endpoint !== "") {
            writer.uint32(18).string(message.endpoint);
        }
        if (message.description !== undefined) {
            types_1.Description.encode(message.description, writer.uint32(26).fork()).ldelim();
        }
        if (message.sealAddress !== "") {
            writer.uint32(34).string(message.sealAddress);
        }
        if (message.approvalAddress !== "") {
            writer.uint32(42).string(message.approvalAddress);
        }
        if (message.gcAddress !== "") {
            writer.uint32(50).string(message.gcAddress);
        }
        if (message.maintenanceAddress !== "") {
            writer.uint32(58).string(message.maintenanceAddress);
        }
        if (message.blsKey !== "") {
            writer.uint32(66).string(message.blsKey);
        }
        if (message.blsProof !== "") {
            writer.uint32(74).string(message.blsProof);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgEditStorageProvider();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.spAddress = reader.string();
                    break;
                case 2:
                    message.endpoint = reader.string();
                    break;
                case 3:
                    message.description = types_1.Description.decode(reader, reader.uint32());
                    break;
                case 4:
                    message.sealAddress = reader.string();
                    break;
                case 5:
                    message.approvalAddress = reader.string();
                    break;
                case 6:
                    message.gcAddress = reader.string();
                    break;
                case 7:
                    message.maintenanceAddress = reader.string();
                    break;
                case 8:
                    message.blsKey = reader.string();
                    break;
                case 9:
                    message.blsProof = reader.string();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            spAddress: (0, helpers_1.isSet)(object.spAddress) ? String(object.spAddress) : "",
            endpoint: (0, helpers_1.isSet)(object.endpoint) ? String(object.endpoint) : "",
            description: (0, helpers_1.isSet)(object.description) ? types_1.Description.fromJSON(object.description) : undefined,
            sealAddress: (0, helpers_1.isSet)(object.sealAddress) ? String(object.sealAddress) : "",
            approvalAddress: (0, helpers_1.isSet)(object.approvalAddress) ? String(object.approvalAddress) : "",
            gcAddress: (0, helpers_1.isSet)(object.gcAddress) ? String(object.gcAddress) : "",
            maintenanceAddress: (0, helpers_1.isSet)(object.maintenanceAddress) ? String(object.maintenanceAddress) : "",
            blsKey: (0, helpers_1.isSet)(object.blsKey) ? String(object.blsKey) : "",
            blsProof: (0, helpers_1.isSet)(object.blsProof) ? String(object.blsProof) : ""
        };
    },
    toJSON(message) {
        const obj = {};
        message.spAddress !== undefined && (obj.spAddress = message.spAddress);
        message.endpoint !== undefined && (obj.endpoint = message.endpoint);
        message.description !== undefined && (obj.description = message.description ? types_1.Description.toJSON(message.description) : undefined);
        message.sealAddress !== undefined && (obj.sealAddress = message.sealAddress);
        message.approvalAddress !== undefined && (obj.approvalAddress = message.approvalAddress);
        message.gcAddress !== undefined && (obj.gcAddress = message.gcAddress);
        message.maintenanceAddress !== undefined && (obj.maintenanceAddress = message.maintenanceAddress);
        message.blsKey !== undefined && (obj.blsKey = message.blsKey);
        message.blsProof !== undefined && (obj.blsProof = message.blsProof);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMsgEditStorageProvider();
        message.spAddress = object.spAddress ?? "";
        message.endpoint = object.endpoint ?? "";
        message.description = object.description !== undefined && object.description !== null ? types_1.Description.fromPartial(object.description) : undefined;
        message.sealAddress = object.sealAddress ?? "";
        message.approvalAddress = object.approvalAddress ?? "";
        message.gcAddress = object.gcAddress ?? "";
        message.maintenanceAddress = object.maintenanceAddress ?? "";
        message.blsKey = object.blsKey ?? "";
        message.blsProof = object.blsProof ?? "";
        return message;
    },
    fromSDK(object) {
        return {
            spAddress: object?.sp_address,
            endpoint: object?.endpoint,
            description: object.description ? types_1.Description.fromSDK(object.description) : undefined,
            sealAddress: object?.seal_address,
            approvalAddress: object?.approval_address,
            gcAddress: object?.gc_address,
            maintenanceAddress: object?.maintenance_address,
            blsKey: object?.bls_key,
            blsProof: object?.bls_proof
        };
    },
    toSDK(message) {
        const obj = {};
        obj.sp_address = message.spAddress;
        obj.endpoint = message.endpoint;
        message.description !== undefined && (obj.description = message.description ? types_1.Description.toSDK(message.description) : undefined);
        obj.seal_address = message.sealAddress;
        obj.approval_address = message.approvalAddress;
        obj.gc_address = message.gcAddress;
        obj.maintenance_address = message.maintenanceAddress;
        obj.bls_key = message.blsKey;
        obj.bls_proof = message.blsProof;
        return obj;
    },
    fromAmino(object) {
        const message = createBaseMsgEditStorageProvider();
        if (object.sp_address !== undefined && object.sp_address !== null) {
            message.spAddress = object.sp_address;
        }
        if (object.endpoint !== undefined && object.endpoint !== null) {
            message.endpoint = object.endpoint;
        }
        if (object.description !== undefined && object.description !== null) {
            message.description = types_1.Description.fromAmino(object.description);
        }
        if (object.seal_address !== undefined && object.seal_address !== null) {
            message.sealAddress = object.seal_address;
        }
        if (object.approval_address !== undefined && object.approval_address !== null) {
            message.approvalAddress = object.approval_address;
        }
        if (object.gc_address !== undefined && object.gc_address !== null) {
            message.gcAddress = object.gc_address;
        }
        if (object.maintenance_address !== undefined && object.maintenance_address !== null) {
            message.maintenanceAddress = object.maintenance_address;
        }
        if (object.bls_key !== undefined && object.bls_key !== null) {
            message.blsKey = object.bls_key;
        }
        if (object.bls_proof !== undefined && object.bls_proof !== null) {
            message.blsProof = object.bls_proof;
        }
        return message;
    },
    toAmino(message) {
        const obj = {};
        obj.sp_address = message.spAddress;
        obj.endpoint = message.endpoint;
        obj.description = message.description ? types_1.Description.toAmino(message.description) : undefined;
        obj.seal_address = message.sealAddress;
        obj.approval_address = message.approvalAddress;
        obj.gc_address = message.gcAddress;
        obj.maintenance_address = message.maintenanceAddress;
        obj.bls_key = message.blsKey;
        obj.bls_proof = message.blsProof;
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgEditStorageProvider.fromAmino(object.value);
    },
    fromProtoMsg(message) {
        return exports.MsgEditStorageProvider.decode(message.value);
    },
    toProto(message) {
        return exports.MsgEditStorageProvider.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/greenfield.sp.MsgEditStorageProvider",
            value: exports.MsgEditStorageProvider.encode(message).finish()
        };
    }
};
function createBaseMsgEditStorageProviderResponse() {
    return {};
}
exports.MsgEditStorageProviderResponse = {
    typeUrl: "/greenfield.sp.MsgEditStorageProviderResponse",
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgEditStorageProviderResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    fromPartial(_) {
        const message = createBaseMsgEditStorageProviderResponse();
        return message;
    },
    fromSDK(_) {
        return {};
    },
    toSDK(_) {
        const obj = {};
        return obj;
    },
    fromAmino(_) {
        const message = createBaseMsgEditStorageProviderResponse();
        return message;
    },
    toAmino(_) {
        const obj = {};
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgEditStorageProviderResponse.fromAmino(object.value);
    },
    fromProtoMsg(message) {
        return exports.MsgEditStorageProviderResponse.decode(message.value);
    },
    toProto(message) {
        return exports.MsgEditStorageProviderResponse.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/greenfield.sp.MsgEditStorageProviderResponse",
            value: exports.MsgEditStorageProviderResponse.encode(message).finish()
        };
    }
};
function createBaseMsgUpdateSpStoragePrice() {
    return {
        spAddress: "",
        readPrice: "",
        freeReadQuota: helpers_1.Long.UZERO,
        storePrice: ""
    };
}
exports.MsgUpdateSpStoragePrice = {
    typeUrl: "/greenfield.sp.MsgUpdateSpStoragePrice",
    encode(message, writer = _m0.Writer.create()) {
        if (message.spAddress !== "") {
            writer.uint32(10).string(message.spAddress);
        }
        if (message.readPrice !== "") {
            writer.uint32(18).string(math_1.Decimal.fromUserInput(message.readPrice, 18).atomics);
        }
        if (!message.freeReadQuota.isZero()) {
            writer.uint32(24).uint64(message.freeReadQuota);
        }
        if (message.storePrice !== "") {
            writer.uint32(34).string(math_1.Decimal.fromUserInput(message.storePrice, 18).atomics);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateSpStoragePrice();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.spAddress = reader.string();
                    break;
                case 2:
                    message.readPrice = math_1.Decimal.fromAtomics(reader.string(), 18).toString();
                    break;
                case 3:
                    message.freeReadQuota = reader.uint64();
                    break;
                case 4:
                    message.storePrice = math_1.Decimal.fromAtomics(reader.string(), 18).toString();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            spAddress: (0, helpers_1.isSet)(object.spAddress) ? String(object.spAddress) : "",
            readPrice: (0, helpers_1.isSet)(object.readPrice) ? String(object.readPrice) : "",
            freeReadQuota: (0, helpers_1.isSet)(object.freeReadQuota) ? helpers_1.Long.fromValue(object.freeReadQuota) : helpers_1.Long.UZERO,
            storePrice: (0, helpers_1.isSet)(object.storePrice) ? String(object.storePrice) : ""
        };
    },
    toJSON(message) {
        const obj = {};
        message.spAddress !== undefined && (obj.spAddress = message.spAddress);
        message.readPrice !== undefined && (obj.readPrice = message.readPrice);
        message.freeReadQuota !== undefined && (obj.freeReadQuota = (message.freeReadQuota || helpers_1.Long.UZERO).toString());
        message.storePrice !== undefined && (obj.storePrice = message.storePrice);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMsgUpdateSpStoragePrice();
        message.spAddress = object.spAddress ?? "";
        message.readPrice = object.readPrice ?? "";
        message.freeReadQuota = object.freeReadQuota !== undefined && object.freeReadQuota !== null ? helpers_1.Long.fromValue(object.freeReadQuota) : helpers_1.Long.UZERO;
        message.storePrice = object.storePrice ?? "";
        return message;
    },
    fromSDK(object) {
        return {
            spAddress: object?.sp_address,
            readPrice: object?.read_price,
            freeReadQuota: object?.free_read_quota,
            storePrice: object?.store_price
        };
    },
    toSDK(message) {
        const obj = {};
        obj.sp_address = message.spAddress;
        obj.read_price = message.readPrice;
        obj.free_read_quota = message.freeReadQuota;
        obj.store_price = message.storePrice;
        return obj;
    },
    fromAmino(object) {
        const message = createBaseMsgUpdateSpStoragePrice();
        if (object.sp_address !== undefined && object.sp_address !== null) {
            message.spAddress = object.sp_address;
        }
        if (object.read_price !== undefined && object.read_price !== null) {
            message.readPrice = object.read_price;
        }
        if (object.free_read_quota !== undefined && object.free_read_quota !== null) {
            message.freeReadQuota = helpers_1.Long.fromString(object.free_read_quota);
        }
        if (object.store_price !== undefined && object.store_price !== null) {
            message.storePrice = object.store_price;
        }
        return message;
    },
    toAmino(message) {
        const obj = {};
        obj.sp_address = message.spAddress;
        obj.read_price = message.readPrice;
        obj.free_read_quota = message.freeReadQuota ? message.freeReadQuota.toString() : undefined;
        obj.store_price = message.storePrice;
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgUpdateSpStoragePrice.fromAmino(object.value);
    },
    fromProtoMsg(message) {
        return exports.MsgUpdateSpStoragePrice.decode(message.value);
    },
    toProto(message) {
        return exports.MsgUpdateSpStoragePrice.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/greenfield.sp.MsgUpdateSpStoragePrice",
            value: exports.MsgUpdateSpStoragePrice.encode(message).finish()
        };
    }
};
function createBaseMsgUpdateSpStoragePriceResponse() {
    return {};
}
exports.MsgUpdateSpStoragePriceResponse = {
    typeUrl: "/greenfield.sp.MsgUpdateSpStoragePriceResponse",
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateSpStoragePriceResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    fromPartial(_) {
        const message = createBaseMsgUpdateSpStoragePriceResponse();
        return message;
    },
    fromSDK(_) {
        return {};
    },
    toSDK(_) {
        const obj = {};
        return obj;
    },
    fromAmino(_) {
        const message = createBaseMsgUpdateSpStoragePriceResponse();
        return message;
    },
    toAmino(_) {
        const obj = {};
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgUpdateSpStoragePriceResponse.fromAmino(object.value);
    },
    fromProtoMsg(message) {
        return exports.MsgUpdateSpStoragePriceResponse.decode(message.value);
    },
    toProto(message) {
        return exports.MsgUpdateSpStoragePriceResponse.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/greenfield.sp.MsgUpdateSpStoragePriceResponse",
            value: exports.MsgUpdateSpStoragePriceResponse.encode(message).finish()
        };
    }
};
function createBaseMsgUpdateParams() {
    return {
        authority: "",
        params: params_1.Params.fromPartial({})
    };
}
exports.MsgUpdateParams = {
    typeUrl: "/greenfield.sp.MsgUpdateParams",
    encode(message, writer = _m0.Writer.create()) {
        if (message.authority !== "") {
            writer.uint32(10).string(message.authority);
        }
        if (message.params !== undefined) {
            params_1.Params.encode(message.params, writer.uint32(18).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.authority = reader.string();
                    break;
                case 2:
                    message.params = params_1.Params.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            authority: (0, helpers_1.isSet)(object.authority) ? String(object.authority) : "",
            params: (0, helpers_1.isSet)(object.params) ? params_1.Params.fromJSON(object.params) : undefined
        };
    },
    toJSON(message) {
        const obj = {};
        message.authority !== undefined && (obj.authority = message.authority);
        message.params !== undefined && (obj.params = message.params ? params_1.Params.toJSON(message.params) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMsgUpdateParams();
        message.authority = object.authority ?? "";
        message.params = object.params !== undefined && object.params !== null ? params_1.Params.fromPartial(object.params) : undefined;
        return message;
    },
    fromSDK(object) {
        return {
            authority: object?.authority,
            params: object.params ? params_1.Params.fromSDK(object.params) : undefined
        };
    },
    toSDK(message) {
        const obj = {};
        obj.authority = message.authority;
        message.params !== undefined && (obj.params = message.params ? params_1.Params.toSDK(message.params) : undefined);
        return obj;
    },
    fromAmino(object) {
        const message = createBaseMsgUpdateParams();
        if (object.authority !== undefined && object.authority !== null) {
            message.authority = object.authority;
        }
        if (object.params !== undefined && object.params !== null) {
            message.params = params_1.Params.fromAmino(object.params);
        }
        return message;
    },
    toAmino(message) {
        const obj = {};
        obj.authority = message.authority;
        obj.params = message.params ? params_1.Params.toAmino(message.params) : undefined;
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgUpdateParams.fromAmino(object.value);
    },
    fromProtoMsg(message) {
        return exports.MsgUpdateParams.decode(message.value);
    },
    toProto(message) {
        return exports.MsgUpdateParams.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/greenfield.sp.MsgUpdateParams",
            value: exports.MsgUpdateParams.encode(message).finish()
        };
    }
};
function createBaseMsgUpdateParamsResponse() {
    return {};
}
exports.MsgUpdateParamsResponse = {
    typeUrl: "/greenfield.sp.MsgUpdateParamsResponse",
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateParamsResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    fromPartial(_) {
        const message = createBaseMsgUpdateParamsResponse();
        return message;
    },
    fromSDK(_) {
        return {};
    },
    toSDK(_) {
        const obj = {};
        return obj;
    },
    fromAmino(_) {
        const message = createBaseMsgUpdateParamsResponse();
        return message;
    },
    toAmino(_) {
        const obj = {};
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgUpdateParamsResponse.fromAmino(object.value);
    },
    fromProtoMsg(message) {
        return exports.MsgUpdateParamsResponse.decode(message.value);
    },
    toProto(message) {
        return exports.MsgUpdateParamsResponse.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/greenfield.sp.MsgUpdateParamsResponse",
            value: exports.MsgUpdateParamsResponse.encode(message).finish()
        };
    }
};
function createBaseMsgUpdateStorageProviderStatus() {
    return {
        spAddress: "",
        status: 0,
        duration: helpers_1.Long.ZERO
    };
}
exports.MsgUpdateStorageProviderStatus = {
    typeUrl: "/greenfield.sp.MsgUpdateStorageProviderStatus",
    encode(message, writer = _m0.Writer.create()) {
        if (message.spAddress !== "") {
            writer.uint32(10).string(message.spAddress);
        }
        if (message.status !== 0) {
            writer.uint32(16).int32(message.status);
        }
        if (!message.duration.isZero()) {
            writer.uint32(24).int64(message.duration);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateStorageProviderStatus();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.spAddress = reader.string();
                    break;
                case 2:
                    message.status = reader.int32();
                    break;
                case 3:
                    message.duration = reader.int64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            spAddress: (0, helpers_1.isSet)(object.spAddress) ? String(object.spAddress) : "",
            status: (0, helpers_1.isSet)(object.status) ? (0, types_1.statusFromJSON)(object.status) : -1,
            duration: (0, helpers_1.isSet)(object.duration) ? helpers_1.Long.fromValue(object.duration) : helpers_1.Long.ZERO
        };
    },
    toJSON(message) {
        const obj = {};
        message.spAddress !== undefined && (obj.spAddress = message.spAddress);
        message.status !== undefined && (obj.status = (0, types_1.statusToJSON)(message.status));
        message.duration !== undefined && (obj.duration = (message.duration || helpers_1.Long.ZERO).toString());
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMsgUpdateStorageProviderStatus();
        message.spAddress = object.spAddress ?? "";
        message.status = object.status ?? 0;
        message.duration = object.duration !== undefined && object.duration !== null ? helpers_1.Long.fromValue(object.duration) : helpers_1.Long.ZERO;
        return message;
    },
    fromSDK(object) {
        return {
            spAddress: object?.sp_address,
            status: (0, helpers_1.isSet)(object.status) ? (0, types_1.statusFromJSON)(object.status) : -1,
            duration: object?.duration
        };
    },
    toSDK(message) {
        const obj = {};
        obj.sp_address = message.spAddress;
        message.status !== undefined && (obj.status = (0, types_1.statusToJSON)(message.status));
        obj.duration = message.duration;
        return obj;
    },
    fromAmino(object) {
        const message = createBaseMsgUpdateStorageProviderStatus();
        if (object.sp_address !== undefined && object.sp_address !== null) {
            message.spAddress = object.sp_address;
        }
        if (object.status !== undefined && object.status !== null) {
            message.status = (0, types_1.statusFromJSON)(object.status);
        }
        if (object.duration !== undefined && object.duration !== null) {
            message.duration = helpers_1.Long.fromString(object.duration);
        }
        return message;
    },
    toAmino(message) {
        const obj = {};
        obj.sp_address = message.spAddress;
        obj.status = (0, types_1.statusToJSON)(message.status);
        obj.duration = message.duration ? message.duration.toString() : undefined;
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgUpdateStorageProviderStatus.fromAmino(object.value);
    },
    fromProtoMsg(message) {
        return exports.MsgUpdateStorageProviderStatus.decode(message.value);
    },
    toProto(message) {
        return exports.MsgUpdateStorageProviderStatus.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/greenfield.sp.MsgUpdateStorageProviderStatus",
            value: exports.MsgUpdateStorageProviderStatus.encode(message).finish()
        };
    }
};
function createBaseMsgUpdateStorageProviderStatusResponse() {
    return {};
}
exports.MsgUpdateStorageProviderStatusResponse = {
    typeUrl: "/greenfield.sp.MsgUpdateStorageProviderStatusResponse",
    encode(_, writer = _m0.Writer.create()) {
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgUpdateStorageProviderStatusResponse();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(_) {
        return {};
    },
    toJSON(_) {
        const obj = {};
        return obj;
    },
    fromPartial(_) {
        const message = createBaseMsgUpdateStorageProviderStatusResponse();
        return message;
    },
    fromSDK(_) {
        return {};
    },
    toSDK(_) {
        const obj = {};
        return obj;
    },
    fromAmino(_) {
        const message = createBaseMsgUpdateStorageProviderStatusResponse();
        return message;
    },
    toAmino(_) {
        const obj = {};
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgUpdateStorageProviderStatusResponse.fromAmino(object.value);
    },
    fromProtoMsg(message) {
        return exports.MsgUpdateStorageProviderStatusResponse.decode(message.value);
    },
    toProto(message) {
        return exports.MsgUpdateStorageProviderStatusResponse.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/greenfield.sp.MsgUpdateStorageProviderStatusResponse",
            value: exports.MsgUpdateStorageProviderStatusResponse.encode(message).finish()
        };
    }
};
class MsgClientImpl {
    constructor(rpc) {
        this.rpc = rpc;
        this.CreateStorageProvider = this.CreateStorageProvider.bind(this);
        this.Deposit = this.Deposit.bind(this);
        this.EditStorageProvider = this.EditStorageProvider.bind(this);
        this.UpdateSpStoragePrice = this.UpdateSpStoragePrice.bind(this);
        this.UpdateSpStatus = this.UpdateSpStatus.bind(this);
        this.UpdateParams = this.UpdateParams.bind(this);
    }
    CreateStorageProvider(request) {
        const data = exports.MsgCreateStorageProvider.encode(request).finish();
        const promise = this.rpc.request("greenfield.sp.Msg", "CreateStorageProvider", data);
        return promise.then(data => exports.MsgCreateStorageProviderResponse.decode(new _m0.Reader(data)));
    }
    Deposit(request) {
        const data = exports.MsgDeposit.encode(request).finish();
        const promise = this.rpc.request("greenfield.sp.Msg", "Deposit", data);
        return promise.then(data => exports.MsgDepositResponse.decode(new _m0.Reader(data)));
    }
    EditStorageProvider(request) {
        const data = exports.MsgEditStorageProvider.encode(request).finish();
        const promise = this.rpc.request("greenfield.sp.Msg", "EditStorageProvider", data);
        return promise.then(data => exports.MsgEditStorageProviderResponse.decode(new _m0.Reader(data)));
    }
    UpdateSpStoragePrice(request) {
        const data = exports.MsgUpdateSpStoragePrice.encode(request).finish();
        const promise = this.rpc.request("greenfield.sp.Msg", "UpdateSpStoragePrice", data);
        return promise.then(data => exports.MsgUpdateSpStoragePriceResponse.decode(new _m0.Reader(data)));
    }
    UpdateSpStatus(request) {
        const data = exports.MsgUpdateStorageProviderStatus.encode(request).finish();
        const promise = this.rpc.request("greenfield.sp.Msg", "UpdateSpStatus", data);
        return promise.then(data => exports.MsgUpdateStorageProviderStatusResponse.decode(new _m0.Reader(data)));
    }
    UpdateParams(request) {
        const data = exports.MsgUpdateParams.encode(request).finish();
        const promise = this.rpc.request("greenfield.sp.Msg", "UpdateParams", data);
        return promise.then(data => exports.MsgUpdateParamsResponse.decode(new _m0.Reader(data)));
    }
}
exports.MsgClientImpl = MsgClientImpl;
//# sourceMappingURL=tx.js.map