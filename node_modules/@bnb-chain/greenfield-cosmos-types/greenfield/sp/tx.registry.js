"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageComposer = exports.load = exports.registry = void 0;
const tx_1 = require("./tx");
exports.registry = [["/greenfield.sp.MsgCreateStorageProvider", tx_1.MsgCreateStorageProvider], ["/greenfield.sp.MsgDeposit", tx_1.MsgDeposit], ["/greenfield.sp.MsgEditStorageProvider", tx_1.MsgEditStorageProvider], ["/greenfield.sp.MsgUpdateSpStoragePrice", tx_1.MsgUpdateSpStoragePrice], ["/greenfield.sp.MsgUpdateStorageProviderStatus", tx_1.MsgUpdateStorageProviderStatus], ["/greenfield.sp.MsgUpdateParams", tx_1.MsgUpdateParams]];
const load = (protoRegistry) => {
    exports.registry.forEach(([typeUrl, mod]) => {
        protoRegistry.register(typeUrl, mod);
    });
};
exports.load = load;
exports.MessageComposer = {
    encoded: {
        createStorageProvider(value) {
            return {
                typeUrl: "/greenfield.sp.MsgCreateStorageProvider",
                value: tx_1.MsgCreateStorageProvider.encode(value).finish()
            };
        },
        deposit(value) {
            return {
                typeUrl: "/greenfield.sp.MsgDeposit",
                value: tx_1.MsgDeposit.encode(value).finish()
            };
        },
        editStorageProvider(value) {
            return {
                typeUrl: "/greenfield.sp.MsgEditStorageProvider",
                value: tx_1.MsgEditStorageProvider.encode(value).finish()
            };
        },
        updateSpStoragePrice(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateSpStoragePrice",
                value: tx_1.MsgUpdateSpStoragePrice.encode(value).finish()
            };
        },
        updateSpStatus(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateStorageProviderStatus",
                value: tx_1.MsgUpdateStorageProviderStatus.encode(value).finish()
            };
        },
        updateParams(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateParams",
                value: tx_1.MsgUpdateParams.encode(value).finish()
            };
        }
    },
    withTypeUrl: {
        createStorageProvider(value) {
            return {
                typeUrl: "/greenfield.sp.MsgCreateStorageProvider",
                value
            };
        },
        deposit(value) {
            return {
                typeUrl: "/greenfield.sp.MsgDeposit",
                value
            };
        },
        editStorageProvider(value) {
            return {
                typeUrl: "/greenfield.sp.MsgEditStorageProvider",
                value
            };
        },
        updateSpStoragePrice(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateSpStoragePrice",
                value
            };
        },
        updateSpStatus(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateStorageProviderStatus",
                value
            };
        },
        updateParams(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateParams",
                value
            };
        }
    },
    toJSON: {
        createStorageProvider(value) {
            return {
                typeUrl: "/greenfield.sp.MsgCreateStorageProvider",
                value: tx_1.MsgCreateStorageProvider.toJSON(value)
            };
        },
        deposit(value) {
            return {
                typeUrl: "/greenfield.sp.MsgDeposit",
                value: tx_1.MsgDeposit.toJSON(value)
            };
        },
        editStorageProvider(value) {
            return {
                typeUrl: "/greenfield.sp.MsgEditStorageProvider",
                value: tx_1.MsgEditStorageProvider.toJSON(value)
            };
        },
        updateSpStoragePrice(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateSpStoragePrice",
                value: tx_1.MsgUpdateSpStoragePrice.toJSON(value)
            };
        },
        updateSpStatus(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateStorageProviderStatus",
                value: tx_1.MsgUpdateStorageProviderStatus.toJSON(value)
            };
        },
        updateParams(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateParams",
                value: tx_1.MsgUpdateParams.toJSON(value)
            };
        }
    },
    fromJSON: {
        createStorageProvider(value) {
            return {
                typeUrl: "/greenfield.sp.MsgCreateStorageProvider",
                value: tx_1.MsgCreateStorageProvider.fromJSON(value)
            };
        },
        deposit(value) {
            return {
                typeUrl: "/greenfield.sp.MsgDeposit",
                value: tx_1.MsgDeposit.fromJSON(value)
            };
        },
        editStorageProvider(value) {
            return {
                typeUrl: "/greenfield.sp.MsgEditStorageProvider",
                value: tx_1.MsgEditStorageProvider.fromJSON(value)
            };
        },
        updateSpStoragePrice(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateSpStoragePrice",
                value: tx_1.MsgUpdateSpStoragePrice.fromJSON(value)
            };
        },
        updateSpStatus(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateStorageProviderStatus",
                value: tx_1.MsgUpdateStorageProviderStatus.fromJSON(value)
            };
        },
        updateParams(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateParams",
                value: tx_1.MsgUpdateParams.fromJSON(value)
            };
        }
    },
    fromPartial: {
        createStorageProvider(value) {
            return {
                typeUrl: "/greenfield.sp.MsgCreateStorageProvider",
                value: tx_1.MsgCreateStorageProvider.fromPartial(value)
            };
        },
        deposit(value) {
            return {
                typeUrl: "/greenfield.sp.MsgDeposit",
                value: tx_1.MsgDeposit.fromPartial(value)
            };
        },
        editStorageProvider(value) {
            return {
                typeUrl: "/greenfield.sp.MsgEditStorageProvider",
                value: tx_1.MsgEditStorageProvider.fromPartial(value)
            };
        },
        updateSpStoragePrice(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateSpStoragePrice",
                value: tx_1.MsgUpdateSpStoragePrice.fromPartial(value)
            };
        },
        updateSpStatus(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateStorageProviderStatus",
                value: tx_1.MsgUpdateStorageProviderStatus.fromPartial(value)
            };
        },
        updateParams(value) {
            return {
                typeUrl: "/greenfield.sp.MsgUpdateParams",
                value: tx_1.MsgUpdateParams.fromPartial(value)
            };
        }
    }
};
//# sourceMappingURL=tx.registry.js.map