import { GeneratedType, Registry, OfflineSigner } from "@cosmjs/proto-signing";
import { AminoTypes } from "@cosmjs/stargate";
import { HttpEndpoint } from "@cosmjs/tendermint-rpc";
export declare const greenfieldAminoConverters: {
    "/greenfield.virtualgroup.MsgCreateGlobalVirtualGroup": {
        aminoType: string;
        toAmino: (message: import("./virtualgroup/tx").MsgCreateGlobalVirtualGroup) => import("./virtualgroup/tx").MsgCreateGlobalVirtualGroupAmino;
        fromAmino: (object: import("./virtualgroup/tx").MsgCreateGlobalVirtualGroupAmino) => import("./virtualgroup/tx").MsgCreateGlobalVirtualGroup;
    };
    "/greenfield.virtualgroup.MsgDeleteGlobalVirtualGroup": {
        aminoType: string;
        toAmino: (message: import("./virtualgroup/tx").MsgDeleteGlobalVirtualGroup) => import("./virtualgroup/tx").MsgDeleteGlobalVirtualGroupAmino;
        fromAmino: (object: import("./virtualgroup/tx").MsgDeleteGlobalVirtualGroupAmino) => import("./virtualgroup/tx").MsgDeleteGlobalVirtualGroup;
    };
    "/greenfield.virtualgroup.MsgDeposit": {
        aminoType: string;
        toAmino: (message: import("./virtualgroup/tx").MsgDeposit) => import("./virtualgroup/tx").MsgDepositAmino;
        fromAmino: (object: import("./virtualgroup/tx").MsgDepositAmino) => import("./virtualgroup/tx").MsgDeposit;
    };
    "/greenfield.virtualgroup.MsgWithdraw": {
        aminoType: string;
        toAmino: (message: import("./virtualgroup/tx").MsgWithdraw) => import("./virtualgroup/tx").MsgWithdrawAmino;
        fromAmino: (object: import("./virtualgroup/tx").MsgWithdrawAmino) => import("./virtualgroup/tx").MsgWithdraw;
    };
    "/greenfield.virtualgroup.MsgSwapOut": {
        aminoType: string;
        toAmino: (message: import("./virtualgroup/tx").MsgSwapOut) => import("./virtualgroup/tx").MsgSwapOutAmino;
        fromAmino: (object: import("./virtualgroup/tx").MsgSwapOutAmino) => import("./virtualgroup/tx").MsgSwapOut;
    };
    "/greenfield.virtualgroup.MsgSettle": {
        aminoType: string;
        toAmino: (message: import("./virtualgroup/tx").MsgSettle) => import("./virtualgroup/tx").MsgSettleAmino;
        fromAmino: (object: import("./virtualgroup/tx").MsgSettleAmino) => import("./virtualgroup/tx").MsgSettle;
    };
    "/greenfield.virtualgroup.MsgUpdateParams": {
        aminoType: string;
        toAmino: (message: import("./virtualgroup/tx").MsgUpdateParams) => import("./virtualgroup/tx").MsgUpdateParamsAmino;
        fromAmino: (object: import("./virtualgroup/tx").MsgUpdateParamsAmino) => import("./virtualgroup/tx").MsgUpdateParams;
    };
    "/greenfield.virtualgroup.MsgStorageProviderExit": {
        aminoType: string;
        toAmino: (message: import("./virtualgroup/tx").MsgStorageProviderExit) => import("./virtualgroup/tx").MsgStorageProviderExitAmino;
        fromAmino: (object: import("./virtualgroup/tx").MsgStorageProviderExitAmino) => import("./virtualgroup/tx").MsgStorageProviderExit;
    };
    "/greenfield.virtualgroup.MsgCompleteStorageProviderExit": {
        aminoType: string;
        toAmino: (message: import("./virtualgroup/tx").MsgCompleteStorageProviderExit) => import("./virtualgroup/tx").MsgCompleteStorageProviderExitAmino;
        fromAmino: (object: import("./virtualgroup/tx").MsgCompleteStorageProviderExitAmino) => import("./virtualgroup/tx").MsgCompleteStorageProviderExit;
    };
    "/greenfield.virtualgroup.MsgCompleteSwapOut": {
        aminoType: string;
        toAmino: (message: import("./virtualgroup/tx").MsgCompleteSwapOut) => import("./virtualgroup/tx").MsgCompleteSwapOutAmino;
        fromAmino: (object: import("./virtualgroup/tx").MsgCompleteSwapOutAmino) => import("./virtualgroup/tx").MsgCompleteSwapOut;
    };
    "/greenfield.virtualgroup.MsgCancelSwapOut": {
        aminoType: string;
        toAmino: (message: import("./virtualgroup/tx").MsgCancelSwapOut) => import("./virtualgroup/tx").MsgCancelSwapOutAmino;
        fromAmino: (object: import("./virtualgroup/tx").MsgCancelSwapOutAmino) => import("./virtualgroup/tx").MsgCancelSwapOut;
    };
    "/greenfield.storage.MsgCreateBucket": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgCreateBucket) => import("./storage/tx").MsgCreateBucketAmino;
        fromAmino: (object: import("./storage/tx").MsgCreateBucketAmino) => import("./storage/tx").MsgCreateBucket;
    };
    "/greenfield.storage.MsgDeleteBucket": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgDeleteBucket) => import("./storage/tx").MsgDeleteBucketAmino;
        fromAmino: (object: import("./storage/tx").MsgDeleteBucketAmino) => import("./storage/tx").MsgDeleteBucket;
    };
    "/greenfield.storage.MsgUpdateBucketInfo": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgUpdateBucketInfo) => import("./storage/tx").MsgUpdateBucketInfoAmino;
        fromAmino: (object: import("./storage/tx").MsgUpdateBucketInfoAmino) => import("./storage/tx").MsgUpdateBucketInfo;
    };
    "/greenfield.storage.MsgMirrorBucket": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgMirrorBucket) => import("./storage/tx").MsgMirrorBucketAmino;
        fromAmino: (object: import("./storage/tx").MsgMirrorBucketAmino) => import("./storage/tx").MsgMirrorBucket;
    };
    "/greenfield.storage.MsgDiscontinueBucket": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgDiscontinueBucket) => import("./storage/tx").MsgDiscontinueBucketAmino;
        fromAmino: (object: import("./storage/tx").MsgDiscontinueBucketAmino) => import("./storage/tx").MsgDiscontinueBucket;
    };
    "/greenfield.storage.MsgCreateObject": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgCreateObject) => import("./storage/tx").MsgCreateObjectAmino;
        fromAmino: (object: import("./storage/tx").MsgCreateObjectAmino) => import("./storage/tx").MsgCreateObject;
    };
    "/greenfield.storage.MsgSealObject": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgSealObject) => import("./storage/tx").MsgSealObjectAmino;
        fromAmino: (object: import("./storage/tx").MsgSealObjectAmino) => import("./storage/tx").MsgSealObject;
    };
    "/greenfield.storage.MsgRejectSealObject": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgRejectSealObject) => import("./storage/tx").MsgRejectSealObjectAmino;
        fromAmino: (object: import("./storage/tx").MsgRejectSealObjectAmino) => import("./storage/tx").MsgRejectSealObject;
    };
    "/greenfield.storage.MsgCopyObject": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgCopyObject) => import("./storage/tx").MsgCopyObjectAmino;
        fromAmino: (object: import("./storage/tx").MsgCopyObjectAmino) => import("./storage/tx").MsgCopyObject;
    };
    "/greenfield.storage.MsgDeleteObject": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgDeleteObject) => import("./storage/tx").MsgDeleteObjectAmino;
        fromAmino: (object: import("./storage/tx").MsgDeleteObjectAmino) => import("./storage/tx").MsgDeleteObject;
    };
    "/greenfield.storage.MsgCancelCreateObject": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgCancelCreateObject) => import("./storage/tx").MsgCancelCreateObjectAmino;
        fromAmino: (object: import("./storage/tx").MsgCancelCreateObjectAmino) => import("./storage/tx").MsgCancelCreateObject;
    };
    "/greenfield.storage.MsgMirrorObject": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgMirrorObject) => import("./storage/tx").MsgMirrorObjectAmino;
        fromAmino: (object: import("./storage/tx").MsgMirrorObjectAmino) => import("./storage/tx").MsgMirrorObject;
    };
    "/greenfield.storage.MsgDiscontinueObject": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgDiscontinueObject) => import("./storage/tx").MsgDiscontinueObjectAmino;
        fromAmino: (object: import("./storage/tx").MsgDiscontinueObjectAmino) => import("./storage/tx").MsgDiscontinueObject;
    };
    "/greenfield.storage.MsgUpdateObjectInfo": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgUpdateObjectInfo) => import("./storage/tx").MsgUpdateObjectInfoAmino;
        fromAmino: (object: import("./storage/tx").MsgUpdateObjectInfoAmino) => import("./storage/tx").MsgUpdateObjectInfo;
    };
    "/greenfield.storage.MsgCreateGroup": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgCreateGroup) => import("./storage/tx").MsgCreateGroupAmino;
        fromAmino: (object: import("./storage/tx").MsgCreateGroupAmino) => import("./storage/tx").MsgCreateGroup;
    };
    "/greenfield.storage.MsgDeleteGroup": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgDeleteGroup) => import("./storage/tx").MsgDeleteGroupAmino;
        fromAmino: (object: import("./storage/tx").MsgDeleteGroupAmino) => import("./storage/tx").MsgDeleteGroup;
    };
    "/greenfield.storage.MsgUpdateGroupMember": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgUpdateGroupMember) => import("./storage/tx").MsgUpdateGroupMemberAmino;
        fromAmino: (object: import("./storage/tx").MsgUpdateGroupMemberAmino) => import("./storage/tx").MsgUpdateGroupMember;
    };
    "/greenfield.storage.MsgUpdateGroupExtra": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgUpdateGroupExtra) => import("./storage/tx").MsgUpdateGroupExtraAmino;
        fromAmino: (object: import("./storage/tx").MsgUpdateGroupExtraAmino) => import("./storage/tx").MsgUpdateGroupExtra;
    };
    "/greenfield.storage.MsgLeaveGroup": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgLeaveGroup) => import("./storage/tx").MsgLeaveGroupAmino;
        fromAmino: (object: import("./storage/tx").MsgLeaveGroupAmino) => import("./storage/tx").MsgLeaveGroup;
    };
    "/greenfield.storage.MsgMirrorGroup": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgMirrorGroup) => import("./storage/tx").MsgMirrorGroupAmino;
        fromAmino: (object: import("./storage/tx").MsgMirrorGroupAmino) => import("./storage/tx").MsgMirrorGroup;
    };
    "/greenfield.storage.MsgRenewGroupMember": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgRenewGroupMember) => import("./storage/tx").MsgRenewGroupMemberAmino;
        fromAmino: (object: import("./storage/tx").MsgRenewGroupMemberAmino) => import("./storage/tx").MsgRenewGroupMember;
    };
    "/greenfield.storage.MsgPutPolicy": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgPutPolicy) => import("./storage/tx").MsgPutPolicyAmino;
        fromAmino: (object: import("./storage/tx").MsgPutPolicyAmino) => import("./storage/tx").MsgPutPolicy;
    };
    "/greenfield.storage.MsgDeletePolicy": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgDeletePolicy) => import("./storage/tx").MsgDeletePolicyAmino;
        fromAmino: (object: import("./storage/tx").MsgDeletePolicyAmino) => import("./storage/tx").MsgDeletePolicy;
    };
    "/greenfield.storage.MsgUpdateParams": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgUpdateParams) => import("./storage/tx").MsgUpdateParamsAmino;
        fromAmino: (object: import("./storage/tx").MsgUpdateParamsAmino) => import("./storage/tx").MsgUpdateParams;
    };
    "/greenfield.storage.MsgMigrateBucket": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgMigrateBucket) => import("./storage/tx").MsgMigrateBucketAmino;
        fromAmino: (object: import("./storage/tx").MsgMigrateBucketAmino) => import("./storage/tx").MsgMigrateBucket;
    };
    "/greenfield.storage.MsgCompleteMigrateBucket": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgCompleteMigrateBucket) => import("./storage/tx").MsgCompleteMigrateBucketAmino;
        fromAmino: (object: import("./storage/tx").MsgCompleteMigrateBucketAmino) => import("./storage/tx").MsgCompleteMigrateBucket;
    };
    "/greenfield.storage.MsgCancelMigrateBucket": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgCancelMigrateBucket) => import("./storage/tx").MsgCancelMigrateBucketAmino;
        fromAmino: (object: import("./storage/tx").MsgCancelMigrateBucketAmino) => import("./storage/tx").MsgCancelMigrateBucket;
    };
    "/greenfield.storage.MsgRejectMigrateBucket": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgRejectMigrateBucket) => import("./storage/tx").MsgRejectMigrateBucketAmino;
        fromAmino: (object: import("./storage/tx").MsgRejectMigrateBucketAmino) => import("./storage/tx").MsgRejectMigrateBucket;
    };
    "/greenfield.storage.MsgSetTag": {
        aminoType: string;
        toAmino: (message: import("./storage/tx").MsgSetTag) => import("./storage/tx").MsgSetTagAmino;
        fromAmino: (object: import("./storage/tx").MsgSetTagAmino) => import("./storage/tx").MsgSetTag;
    };
    "/greenfield.sp.MsgCreateStorageProvider": {
        aminoType: string;
        toAmino: (message: import("./sp/tx").MsgCreateStorageProvider) => import("./sp/tx").MsgCreateStorageProviderAmino;
        fromAmino: (object: import("./sp/tx").MsgCreateStorageProviderAmino) => import("./sp/tx").MsgCreateStorageProvider;
    };
    "/greenfield.sp.MsgDeposit": {
        aminoType: string;
        toAmino: (message: import("./sp/tx").MsgDeposit) => import("./sp/tx").MsgDepositAmino;
        fromAmino: (object: import("./sp/tx").MsgDepositAmino) => import("./sp/tx").MsgDeposit;
    };
    "/greenfield.sp.MsgEditStorageProvider": {
        aminoType: string;
        toAmino: (message: import("./sp/tx").MsgEditStorageProvider) => import("./sp/tx").MsgEditStorageProviderAmino;
        fromAmino: (object: import("./sp/tx").MsgEditStorageProviderAmino) => import("./sp/tx").MsgEditStorageProvider;
    };
    "/greenfield.sp.MsgUpdateSpStoragePrice": {
        aminoType: string;
        toAmino: (message: import("./sp/tx").MsgUpdateSpStoragePrice) => import("./sp/tx").MsgUpdateSpStoragePriceAmino;
        fromAmino: (object: import("./sp/tx").MsgUpdateSpStoragePriceAmino) => import("./sp/tx").MsgUpdateSpStoragePrice;
    };
    "/greenfield.sp.MsgUpdateStorageProviderStatus": {
        aminoType: string;
        toAmino: (message: import("./sp/tx").MsgUpdateStorageProviderStatus) => import("./sp/tx").MsgUpdateStorageProviderStatusAmino;
        fromAmino: (object: import("./sp/tx").MsgUpdateStorageProviderStatusAmino) => import("./sp/tx").MsgUpdateStorageProviderStatus;
    };
    "/greenfield.sp.MsgUpdateParams": {
        aminoType: string;
        toAmino: (message: import("./sp/tx").MsgUpdateParams) => import("./sp/tx").MsgUpdateParamsAmino;
        fromAmino: (object: import("./sp/tx").MsgUpdateParamsAmino) => import("./sp/tx").MsgUpdateParams;
    };
    "/greenfield.permission.MsgUpdateParams": {
        aminoType: string;
        toAmino: (message: import("./permission/tx").MsgUpdateParams) => import("./permission/tx").MsgUpdateParamsAmino;
        fromAmino: (object: import("./permission/tx").MsgUpdateParamsAmino) => import("./permission/tx").MsgUpdateParams;
    };
    "/greenfield.payment.MsgUpdateParams": {
        aminoType: string;
        toAmino: (message: import("./payment/tx").MsgUpdateParams) => import("./payment/tx").MsgUpdateParamsAmino;
        fromAmino: (object: import("./payment/tx").MsgUpdateParamsAmino) => import("./payment/tx").MsgUpdateParams;
    };
    "/greenfield.payment.MsgCreatePaymentAccount": {
        aminoType: string;
        toAmino: (message: import("./payment/tx").MsgCreatePaymentAccount) => import("./payment/tx").MsgCreatePaymentAccountAmino;
        fromAmino: (object: import("./payment/tx").MsgCreatePaymentAccountAmino) => import("./payment/tx").MsgCreatePaymentAccount;
    };
    "/greenfield.payment.MsgDeposit": {
        aminoType: string;
        toAmino: (message: import("./payment/tx").MsgDeposit) => import("./payment/tx").MsgDepositAmino;
        fromAmino: (object: import("./payment/tx").MsgDepositAmino) => import("./payment/tx").MsgDeposit;
    };
    "/greenfield.payment.MsgWithdraw": {
        aminoType: string;
        toAmino: (message: import("./payment/tx").MsgWithdraw) => import("./payment/tx").MsgWithdrawAmino;
        fromAmino: (object: import("./payment/tx").MsgWithdrawAmino) => import("./payment/tx").MsgWithdraw;
    };
    "/greenfield.payment.MsgDisableRefund": {
        aminoType: string;
        toAmino: (message: import("./payment/tx").MsgDisableRefund) => import("./payment/tx").MsgDisableRefundAmino;
        fromAmino: (object: import("./payment/tx").MsgDisableRefundAmino) => import("./payment/tx").MsgDisableRefund;
    };
    "/greenfield.challenge.MsgSubmit": {
        aminoType: string;
        toAmino: (message: import("./challenge/tx").MsgSubmit) => import("./challenge/tx").MsgSubmitAmino;
        fromAmino: (object: import("./challenge/tx").MsgSubmitAmino) => import("./challenge/tx").MsgSubmit;
    };
    "/greenfield.challenge.MsgAttest": {
        aminoType: string;
        toAmino: (message: import("./challenge/tx").MsgAttest) => import("./challenge/tx").MsgAttestAmino;
        fromAmino: (object: import("./challenge/tx").MsgAttestAmino) => import("./challenge/tx").MsgAttest;
    };
    "/greenfield.challenge.MsgUpdateParams": {
        aminoType: string;
        toAmino: (message: import("./challenge/tx").MsgUpdateParams) => import("./challenge/tx").MsgUpdateParamsAmino;
        fromAmino: (object: import("./challenge/tx").MsgUpdateParamsAmino) => import("./challenge/tx").MsgUpdateParams;
    };
    "/greenfield.bridge.MsgTransferOut": {
        aminoType: string;
        toAmino: (message: import("./bridge/tx").MsgTransferOut) => import("./bridge/tx").MsgTransferOutAmino;
        fromAmino: (object: import("./bridge/tx").MsgTransferOutAmino) => import("./bridge/tx").MsgTransferOut;
    };
    "/greenfield.bridge.MsgUpdateParams": {
        aminoType: string;
        toAmino: (message: import("./bridge/tx").MsgUpdateParams) => import("./bridge/tx").MsgUpdateParamsAmino;
        fromAmino: (object: import("./bridge/tx").MsgUpdateParamsAmino) => import("./bridge/tx").MsgUpdateParams;
    };
};
export declare const greenfieldProtoRegistry: ReadonlyArray<[string, GeneratedType]>;
export declare const getSigningGreenfieldClientOptions: ({ defaultTypes }?: {
    defaultTypes?: ReadonlyArray<[string, GeneratedType]>;
}) => {
    registry: Registry;
    aminoTypes: AminoTypes;
};
export declare const getSigningGreenfieldClient: ({ rpcEndpoint, signer, defaultTypes }: {
    rpcEndpoint: string | HttpEndpoint;
    signer: OfflineSigner;
    defaultTypes?: ReadonlyArray<[string, GeneratedType]>;
}) => Promise<any>;
