"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DelayedWithdrawalRecord = exports.protobufPackage = void 0;
//@ts-nocheck
/* eslint-disable */
const helpers_1 = require("../../helpers");
const _m0 = __importStar(require("protobufjs/minimal"));
exports.protobufPackage = "greenfield.payment";
function createBaseDelayedWithdrawalRecord() {
    return {
        addr: "",
        amount: "",
        from: "",
        unlockTimestamp: helpers_1.Long.ZERO
    };
}
exports.DelayedWithdrawalRecord = {
    typeUrl: "/greenfield.payment.DelayedWithdrawalRecord",
    encode(message, writer = _m0.Writer.create()) {
        if (message.addr !== "") {
            writer.uint32(10).string(message.addr);
        }
        if (message.amount !== "") {
            writer.uint32(18).string(message.amount);
        }
        if (message.from !== "") {
            writer.uint32(26).string(message.from);
        }
        if (!message.unlockTimestamp.isZero()) {
            writer.uint32(32).int64(message.unlockTimestamp);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseDelayedWithdrawalRecord();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.addr = reader.string();
                    break;
                case 2:
                    message.amount = reader.string();
                    break;
                case 3:
                    message.from = reader.string();
                    break;
                case 4:
                    message.unlockTimestamp = reader.int64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            addr: (0, helpers_1.isSet)(object.addr) ? String(object.addr) : "",
            amount: (0, helpers_1.isSet)(object.amount) ? String(object.amount) : "",
            from: (0, helpers_1.isSet)(object.from) ? String(object.from) : "",
            unlockTimestamp: (0, helpers_1.isSet)(object.unlockTimestamp) ? helpers_1.Long.fromValue(object.unlockTimestamp) : helpers_1.Long.ZERO
        };
    },
    toJSON(message) {
        const obj = {};
        message.addr !== undefined && (obj.addr = message.addr);
        message.amount !== undefined && (obj.amount = message.amount);
        message.from !== undefined && (obj.from = message.from);
        message.unlockTimestamp !== undefined && (obj.unlockTimestamp = (message.unlockTimestamp || helpers_1.Long.ZERO).toString());
        return obj;
    },
    fromPartial(object) {
        const message = createBaseDelayedWithdrawalRecord();
        message.addr = object.addr ?? "";
        message.amount = object.amount ?? "";
        message.from = object.from ?? "";
        message.unlockTimestamp = object.unlockTimestamp !== undefined && object.unlockTimestamp !== null ? helpers_1.Long.fromValue(object.unlockTimestamp) : helpers_1.Long.ZERO;
        return message;
    },
    fromSDK(object) {
        return {
            addr: object?.addr,
            amount: object?.amount,
            from: object?.from,
            unlockTimestamp: object?.unlock_timestamp
        };
    },
    toSDK(message) {
        const obj = {};
        obj.addr = message.addr;
        obj.amount = message.amount;
        obj.from = message.from;
        obj.unlock_timestamp = message.unlockTimestamp;
        return obj;
    },
    fromAmino(object) {
        const message = createBaseDelayedWithdrawalRecord();
        if (object.addr !== undefined && object.addr !== null) {
            message.addr = object.addr;
        }
        if (object.amount !== undefined && object.amount !== null) {
            message.amount = object.amount;
        }
        if (object.from !== undefined && object.from !== null) {
            message.from = object.from;
        }
        if (object.unlock_timestamp !== undefined && object.unlock_timestamp !== null) {
            message.unlockTimestamp = helpers_1.Long.fromString(object.unlock_timestamp);
        }
        return message;
    },
    toAmino(message) {
        const obj = {};
        obj.addr = message.addr;
        obj.amount = message.amount;
        obj.from = message.from;
        obj.unlock_timestamp = message.unlockTimestamp ? message.unlockTimestamp.toString() : undefined;
        return obj;
    },
    fromAminoMsg(object) {
        return exports.DelayedWithdrawalRecord.fromAmino(object.value);
    },
    fromProtoMsg(message) {
        return exports.DelayedWithdrawalRecord.decode(message.value);
    },
    toProto(message) {
        return exports.DelayedWithdrawalRecord.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/greenfield.payment.DelayedWithdrawalRecord",
            value: exports.DelayedWithdrawalRecord.encode(message).finish()
        };
    }
};
//# sourceMappingURL=delayed_withdrawal_record.js.map