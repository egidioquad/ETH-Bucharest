"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageComposer = exports.load = exports.registry = void 0;
const tx_1 = require("./tx");
exports.registry = [["/greenfield.payment.MsgUpdateParams", tx_1.MsgUpdateParams], ["/greenfield.payment.MsgCreatePaymentAccount", tx_1.MsgCreatePaymentAccount], ["/greenfield.payment.MsgDeposit", tx_1.MsgDeposit], ["/greenfield.payment.MsgWithdraw", tx_1.MsgWithdraw], ["/greenfield.payment.MsgDisableRefund", tx_1.MsgDisableRefund]];
const load = (protoRegistry) => {
    exports.registry.forEach(([typeUrl, mod]) => {
        protoRegistry.register(typeUrl, mod);
    });
};
exports.load = load;
exports.MessageComposer = {
    encoded: {
        updateParams(value) {
            return {
                typeUrl: "/greenfield.payment.MsgUpdateParams",
                value: tx_1.MsgUpdateParams.encode(value).finish()
            };
        },
        createPaymentAccount(value) {
            return {
                typeUrl: "/greenfield.payment.MsgCreatePaymentAccount",
                value: tx_1.MsgCreatePaymentAccount.encode(value).finish()
            };
        },
        deposit(value) {
            return {
                typeUrl: "/greenfield.payment.MsgDeposit",
                value: tx_1.MsgDeposit.encode(value).finish()
            };
        },
        withdraw(value) {
            return {
                typeUrl: "/greenfield.payment.MsgWithdraw",
                value: tx_1.MsgWithdraw.encode(value).finish()
            };
        },
        disableRefund(value) {
            return {
                typeUrl: "/greenfield.payment.MsgDisableRefund",
                value: tx_1.MsgDisableRefund.encode(value).finish()
            };
        }
    },
    withTypeUrl: {
        updateParams(value) {
            return {
                typeUrl: "/greenfield.payment.MsgUpdateParams",
                value
            };
        },
        createPaymentAccount(value) {
            return {
                typeUrl: "/greenfield.payment.MsgCreatePaymentAccount",
                value
            };
        },
        deposit(value) {
            return {
                typeUrl: "/greenfield.payment.MsgDeposit",
                value
            };
        },
        withdraw(value) {
            return {
                typeUrl: "/greenfield.payment.MsgWithdraw",
                value
            };
        },
        disableRefund(value) {
            return {
                typeUrl: "/greenfield.payment.MsgDisableRefund",
                value
            };
        }
    },
    toJSON: {
        updateParams(value) {
            return {
                typeUrl: "/greenfield.payment.MsgUpdateParams",
                value: tx_1.MsgUpdateParams.toJSON(value)
            };
        },
        createPaymentAccount(value) {
            return {
                typeUrl: "/greenfield.payment.MsgCreatePaymentAccount",
                value: tx_1.MsgCreatePaymentAccount.toJSON(value)
            };
        },
        deposit(value) {
            return {
                typeUrl: "/greenfield.payment.MsgDeposit",
                value: tx_1.MsgDeposit.toJSON(value)
            };
        },
        withdraw(value) {
            return {
                typeUrl: "/greenfield.payment.MsgWithdraw",
                value: tx_1.MsgWithdraw.toJSON(value)
            };
        },
        disableRefund(value) {
            return {
                typeUrl: "/greenfield.payment.MsgDisableRefund",
                value: tx_1.MsgDisableRefund.toJSON(value)
            };
        }
    },
    fromJSON: {
        updateParams(value) {
            return {
                typeUrl: "/greenfield.payment.MsgUpdateParams",
                value: tx_1.MsgUpdateParams.fromJSON(value)
            };
        },
        createPaymentAccount(value) {
            return {
                typeUrl: "/greenfield.payment.MsgCreatePaymentAccount",
                value: tx_1.MsgCreatePaymentAccount.fromJSON(value)
            };
        },
        deposit(value) {
            return {
                typeUrl: "/greenfield.payment.MsgDeposit",
                value: tx_1.MsgDeposit.fromJSON(value)
            };
        },
        withdraw(value) {
            return {
                typeUrl: "/greenfield.payment.MsgWithdraw",
                value: tx_1.MsgWithdraw.fromJSON(value)
            };
        },
        disableRefund(value) {
            return {
                typeUrl: "/greenfield.payment.MsgDisableRefund",
                value: tx_1.MsgDisableRefund.fromJSON(value)
            };
        }
    },
    fromPartial: {
        updateParams(value) {
            return {
                typeUrl: "/greenfield.payment.MsgUpdateParams",
                value: tx_1.MsgUpdateParams.fromPartial(value)
            };
        },
        createPaymentAccount(value) {
            return {
                typeUrl: "/greenfield.payment.MsgCreatePaymentAccount",
                value: tx_1.MsgCreatePaymentAccount.fromPartial(value)
            };
        },
        deposit(value) {
            return {
                typeUrl: "/greenfield.payment.MsgDeposit",
                value: tx_1.MsgDeposit.fromPartial(value)
            };
        },
        withdraw(value) {
            return {
                typeUrl: "/greenfield.payment.MsgWithdraw",
                value: tx_1.MsgWithdraw.fromPartial(value)
            };
        },
        disableRefund(value) {
            return {
                typeUrl: "/greenfield.payment.MsgDisableRefund",
                value: tx_1.MsgDisableRefund.fromPartial(value)
            };
        }
    }
};
//# sourceMappingURL=tx.registry.js.map