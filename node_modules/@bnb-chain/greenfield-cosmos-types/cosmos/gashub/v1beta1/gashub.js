"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgGasParams_DynamicGasParams = exports.MsgGasParams_FixedGasParams = exports.MsgGasParams = exports.Params = exports.protobufPackage = void 0;
//@ts-nocheck
/* eslint-disable */
const helpers_1 = require("../../../helpers");
const _m0 = __importStar(require("protobufjs/minimal"));
exports.protobufPackage = "cosmos.gashub.v1beta1";
function createBaseParams() {
    return {
        maxTxSize: helpers_1.Long.UZERO,
        minGasPerByte: helpers_1.Long.UZERO
    };
}
exports.Params = {
    typeUrl: "/cosmos.gashub.v1beta1.Params",
    encode(message, writer = _m0.Writer.create()) {
        if (!message.maxTxSize.isZero()) {
            writer.uint32(8).uint64(message.maxTxSize);
        }
        if (!message.minGasPerByte.isZero()) {
            writer.uint32(16).uint64(message.minGasPerByte);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.maxTxSize = reader.uint64();
                    break;
                case 2:
                    message.minGasPerByte = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            maxTxSize: (0, helpers_1.isSet)(object.maxTxSize) ? helpers_1.Long.fromValue(object.maxTxSize) : helpers_1.Long.UZERO,
            minGasPerByte: (0, helpers_1.isSet)(object.minGasPerByte) ? helpers_1.Long.fromValue(object.minGasPerByte) : helpers_1.Long.UZERO
        };
    },
    toJSON(message) {
        const obj = {};
        message.maxTxSize !== undefined && (obj.maxTxSize = (message.maxTxSize || helpers_1.Long.UZERO).toString());
        message.minGasPerByte !== undefined && (obj.minGasPerByte = (message.minGasPerByte || helpers_1.Long.UZERO).toString());
        return obj;
    },
    fromPartial(object) {
        const message = createBaseParams();
        message.maxTxSize = object.maxTxSize !== undefined && object.maxTxSize !== null ? helpers_1.Long.fromValue(object.maxTxSize) : helpers_1.Long.UZERO;
        message.minGasPerByte = object.minGasPerByte !== undefined && object.minGasPerByte !== null ? helpers_1.Long.fromValue(object.minGasPerByte) : helpers_1.Long.UZERO;
        return message;
    },
    fromSDK(object) {
        return {
            maxTxSize: object?.max_tx_size,
            minGasPerByte: object?.min_gas_per_byte
        };
    },
    toSDK(message) {
        const obj = {};
        obj.max_tx_size = message.maxTxSize;
        obj.min_gas_per_byte = message.minGasPerByte;
        return obj;
    },
    fromAmino(object) {
        const message = createBaseParams();
        if (object.max_tx_size !== undefined && object.max_tx_size !== null) {
            message.maxTxSize = helpers_1.Long.fromString(object.max_tx_size);
        }
        if (object.min_gas_per_byte !== undefined && object.min_gas_per_byte !== null) {
            message.minGasPerByte = helpers_1.Long.fromString(object.min_gas_per_byte);
        }
        return message;
    },
    toAmino(message) {
        const obj = {};
        obj.max_tx_size = message.maxTxSize ? message.maxTxSize.toString() : undefined;
        obj.min_gas_per_byte = message.minGasPerByte ? message.minGasPerByte.toString() : undefined;
        return obj;
    },
    fromAminoMsg(object) {
        return exports.Params.fromAmino(object.value);
    },
    toAminoMsg(message) {
        return {
            type: "cosmos-sdk/x/gashub/Params",
            value: exports.Params.toAmino(message)
        };
    },
    fromProtoMsg(message) {
        return exports.Params.decode(message.value);
    },
    toProto(message) {
        return exports.Params.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/cosmos.gashub.v1beta1.Params",
            value: exports.Params.encode(message).finish()
        };
    }
};
function createBaseMsgGasParams() {
    return {
        msgTypeUrl: "",
        fixedType: undefined,
        grantType: undefined,
        multiSendType: undefined,
        grantAllowanceType: undefined
    };
}
exports.MsgGasParams = {
    typeUrl: "/cosmos.gashub.v1beta1.MsgGasParams",
    encode(message, writer = _m0.Writer.create()) {
        if (message.msgTypeUrl !== "") {
            writer.uint32(10).string(message.msgTypeUrl);
        }
        if (message.fixedType !== undefined) {
            exports.MsgGasParams_FixedGasParams.encode(message.fixedType, writer.uint32(18).fork()).ldelim();
        }
        if (message.grantType !== undefined) {
            exports.MsgGasParams_DynamicGasParams.encode(message.grantType, writer.uint32(26).fork()).ldelim();
        }
        if (message.multiSendType !== undefined) {
            exports.MsgGasParams_DynamicGasParams.encode(message.multiSendType, writer.uint32(34).fork()).ldelim();
        }
        if (message.grantAllowanceType !== undefined) {
            exports.MsgGasParams_DynamicGasParams.encode(message.grantAllowanceType, writer.uint32(42).fork()).ldelim();
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgGasParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.msgTypeUrl = reader.string();
                    break;
                case 2:
                    message.fixedType = exports.MsgGasParams_FixedGasParams.decode(reader, reader.uint32());
                    break;
                case 3:
                    message.grantType = exports.MsgGasParams_DynamicGasParams.decode(reader, reader.uint32());
                    break;
                case 4:
                    message.multiSendType = exports.MsgGasParams_DynamicGasParams.decode(reader, reader.uint32());
                    break;
                case 5:
                    message.grantAllowanceType = exports.MsgGasParams_DynamicGasParams.decode(reader, reader.uint32());
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            msgTypeUrl: (0, helpers_1.isSet)(object.msgTypeUrl) ? String(object.msgTypeUrl) : "",
            fixedType: (0, helpers_1.isSet)(object.fixedType) ? exports.MsgGasParams_FixedGasParams.fromJSON(object.fixedType) : undefined,
            grantType: (0, helpers_1.isSet)(object.grantType) ? exports.MsgGasParams_DynamicGasParams.fromJSON(object.grantType) : undefined,
            multiSendType: (0, helpers_1.isSet)(object.multiSendType) ? exports.MsgGasParams_DynamicGasParams.fromJSON(object.multiSendType) : undefined,
            grantAllowanceType: (0, helpers_1.isSet)(object.grantAllowanceType) ? exports.MsgGasParams_DynamicGasParams.fromJSON(object.grantAllowanceType) : undefined
        };
    },
    toJSON(message) {
        const obj = {};
        message.msgTypeUrl !== undefined && (obj.msgTypeUrl = message.msgTypeUrl);
        message.fixedType !== undefined && (obj.fixedType = message.fixedType ? exports.MsgGasParams_FixedGasParams.toJSON(message.fixedType) : undefined);
        message.grantType !== undefined && (obj.grantType = message.grantType ? exports.MsgGasParams_DynamicGasParams.toJSON(message.grantType) : undefined);
        message.multiSendType !== undefined && (obj.multiSendType = message.multiSendType ? exports.MsgGasParams_DynamicGasParams.toJSON(message.multiSendType) : undefined);
        message.grantAllowanceType !== undefined && (obj.grantAllowanceType = message.grantAllowanceType ? exports.MsgGasParams_DynamicGasParams.toJSON(message.grantAllowanceType) : undefined);
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMsgGasParams();
        message.msgTypeUrl = object.msgTypeUrl ?? "";
        message.fixedType = object.fixedType !== undefined && object.fixedType !== null ? exports.MsgGasParams_FixedGasParams.fromPartial(object.fixedType) : undefined;
        message.grantType = object.grantType !== undefined && object.grantType !== null ? exports.MsgGasParams_DynamicGasParams.fromPartial(object.grantType) : undefined;
        message.multiSendType = object.multiSendType !== undefined && object.multiSendType !== null ? exports.MsgGasParams_DynamicGasParams.fromPartial(object.multiSendType) : undefined;
        message.grantAllowanceType = object.grantAllowanceType !== undefined && object.grantAllowanceType !== null ? exports.MsgGasParams_DynamicGasParams.fromPartial(object.grantAllowanceType) : undefined;
        return message;
    },
    fromSDK(object) {
        return {
            msgTypeUrl: object?.msg_type_url,
            fixedType: object.fixed_type ? exports.MsgGasParams_FixedGasParams.fromSDK(object.fixed_type) : undefined,
            grantType: object.grant_type ? exports.MsgGasParams_DynamicGasParams.fromSDK(object.grant_type) : undefined,
            multiSendType: object.multi_send_type ? exports.MsgGasParams_DynamicGasParams.fromSDK(object.multi_send_type) : undefined,
            grantAllowanceType: object.grant_allowance_type ? exports.MsgGasParams_DynamicGasParams.fromSDK(object.grant_allowance_type) : undefined
        };
    },
    toSDK(message) {
        const obj = {};
        obj.msg_type_url = message.msgTypeUrl;
        message.fixedType !== undefined && (obj.fixed_type = message.fixedType ? exports.MsgGasParams_FixedGasParams.toSDK(message.fixedType) : undefined);
        message.grantType !== undefined && (obj.grant_type = message.grantType ? exports.MsgGasParams_DynamicGasParams.toSDK(message.grantType) : undefined);
        message.multiSendType !== undefined && (obj.multi_send_type = message.multiSendType ? exports.MsgGasParams_DynamicGasParams.toSDK(message.multiSendType) : undefined);
        message.grantAllowanceType !== undefined && (obj.grant_allowance_type = message.grantAllowanceType ? exports.MsgGasParams_DynamicGasParams.toSDK(message.grantAllowanceType) : undefined);
        return obj;
    },
    fromAmino(object) {
        const message = createBaseMsgGasParams();
        if (object.msg_type_url !== undefined && object.msg_type_url !== null) {
            message.msgTypeUrl = object.msg_type_url;
        }
        if (object.fixed_type !== undefined && object.fixed_type !== null) {
            message.fixedType = exports.MsgGasParams_FixedGasParams.fromAmino(object.fixed_type);
        }
        if (object.grant_type !== undefined && object.grant_type !== null) {
            message.grantType = exports.MsgGasParams_DynamicGasParams.fromAmino(object.grant_type);
        }
        if (object.multi_send_type !== undefined && object.multi_send_type !== null) {
            message.multiSendType = exports.MsgGasParams_DynamicGasParams.fromAmino(object.multi_send_type);
        }
        if (object.grant_allowance_type !== undefined && object.grant_allowance_type !== null) {
            message.grantAllowanceType = exports.MsgGasParams_DynamicGasParams.fromAmino(object.grant_allowance_type);
        }
        return message;
    },
    toAmino(message) {
        const obj = {};
        obj.msg_type_url = message.msgTypeUrl;
        obj.fixed_type = message.fixedType ? exports.MsgGasParams_FixedGasParams.toAmino(message.fixedType) : undefined;
        obj.grant_type = message.grantType ? exports.MsgGasParams_DynamicGasParams.toAmino(message.grantType) : undefined;
        obj.multi_send_type = message.multiSendType ? exports.MsgGasParams_DynamicGasParams.toAmino(message.multiSendType) : undefined;
        obj.grant_allowance_type = message.grantAllowanceType ? exports.MsgGasParams_DynamicGasParams.toAmino(message.grantAllowanceType) : undefined;
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgGasParams.fromAmino(object.value);
    },
    toAminoMsg(message) {
        return {
            type: "cosmos-sdk/MsgGasParams",
            value: exports.MsgGasParams.toAmino(message)
        };
    },
    fromProtoMsg(message) {
        return exports.MsgGasParams.decode(message.value);
    },
    toProto(message) {
        return exports.MsgGasParams.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/cosmos.gashub.v1beta1.MsgGasParams",
            value: exports.MsgGasParams.encode(message).finish()
        };
    }
};
function createBaseMsgGasParams_FixedGasParams() {
    return {
        fixedGas: helpers_1.Long.UZERO
    };
}
exports.MsgGasParams_FixedGasParams = {
    typeUrl: "/cosmos.gashub.v1beta1.FixedGasParams",
    encode(message, writer = _m0.Writer.create()) {
        if (!message.fixedGas.isZero()) {
            writer.uint32(8).uint64(message.fixedGas);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgGasParams_FixedGasParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.fixedGas = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            fixedGas: (0, helpers_1.isSet)(object.fixedGas) ? helpers_1.Long.fromValue(object.fixedGas) : helpers_1.Long.UZERO
        };
    },
    toJSON(message) {
        const obj = {};
        message.fixedGas !== undefined && (obj.fixedGas = (message.fixedGas || helpers_1.Long.UZERO).toString());
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMsgGasParams_FixedGasParams();
        message.fixedGas = object.fixedGas !== undefined && object.fixedGas !== null ? helpers_1.Long.fromValue(object.fixedGas) : helpers_1.Long.UZERO;
        return message;
    },
    fromSDK(object) {
        return {
            fixedGas: object?.fixed_gas
        };
    },
    toSDK(message) {
        const obj = {};
        obj.fixed_gas = message.fixedGas;
        return obj;
    },
    fromAmino(object) {
        const message = createBaseMsgGasParams_FixedGasParams();
        if (object.fixed_gas !== undefined && object.fixed_gas !== null) {
            message.fixedGas = helpers_1.Long.fromString(object.fixed_gas);
        }
        return message;
    },
    toAmino(message) {
        const obj = {};
        obj.fixed_gas = message.fixedGas ? message.fixedGas.toString() : undefined;
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgGasParams_FixedGasParams.fromAmino(object.value);
    },
    toAminoMsg(message) {
        return {
            type: "cosmos-sdk/FixedGasParams",
            value: exports.MsgGasParams_FixedGasParams.toAmino(message)
        };
    },
    fromProtoMsg(message) {
        return exports.MsgGasParams_FixedGasParams.decode(message.value);
    },
    toProto(message) {
        return exports.MsgGasParams_FixedGasParams.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/cosmos.gashub.v1beta1.FixedGasParams",
            value: exports.MsgGasParams_FixedGasParams.encode(message).finish()
        };
    }
};
function createBaseMsgGasParams_DynamicGasParams() {
    return {
        fixedGas: helpers_1.Long.UZERO,
        gasPerItem: helpers_1.Long.UZERO
    };
}
exports.MsgGasParams_DynamicGasParams = {
    typeUrl: "/cosmos.gashub.v1beta1.DynamicGasParams",
    encode(message, writer = _m0.Writer.create()) {
        if (!message.fixedGas.isZero()) {
            writer.uint32(8).uint64(message.fixedGas);
        }
        if (!message.gasPerItem.isZero()) {
            writer.uint32(16).uint64(message.gasPerItem);
        }
        return writer;
    },
    decode(input, length) {
        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);
        let end = length === undefined ? reader.len : reader.pos + length;
        const message = createBaseMsgGasParams_DynamicGasParams();
        while (reader.pos < end) {
            const tag = reader.uint32();
            switch (tag >>> 3) {
                case 1:
                    message.fixedGas = reader.uint64();
                    break;
                case 2:
                    message.gasPerItem = reader.uint64();
                    break;
                default:
                    reader.skipType(tag & 7);
                    break;
            }
        }
        return message;
    },
    fromJSON(object) {
        return {
            fixedGas: (0, helpers_1.isSet)(object.fixedGas) ? helpers_1.Long.fromValue(object.fixedGas) : helpers_1.Long.UZERO,
            gasPerItem: (0, helpers_1.isSet)(object.gasPerItem) ? helpers_1.Long.fromValue(object.gasPerItem) : helpers_1.Long.UZERO
        };
    },
    toJSON(message) {
        const obj = {};
        message.fixedGas !== undefined && (obj.fixedGas = (message.fixedGas || helpers_1.Long.UZERO).toString());
        message.gasPerItem !== undefined && (obj.gasPerItem = (message.gasPerItem || helpers_1.Long.UZERO).toString());
        return obj;
    },
    fromPartial(object) {
        const message = createBaseMsgGasParams_DynamicGasParams();
        message.fixedGas = object.fixedGas !== undefined && object.fixedGas !== null ? helpers_1.Long.fromValue(object.fixedGas) : helpers_1.Long.UZERO;
        message.gasPerItem = object.gasPerItem !== undefined && object.gasPerItem !== null ? helpers_1.Long.fromValue(object.gasPerItem) : helpers_1.Long.UZERO;
        return message;
    },
    fromSDK(object) {
        return {
            fixedGas: object?.fixed_gas,
            gasPerItem: object?.gas_per_item
        };
    },
    toSDK(message) {
        const obj = {};
        obj.fixed_gas = message.fixedGas;
        obj.gas_per_item = message.gasPerItem;
        return obj;
    },
    fromAmino(object) {
        const message = createBaseMsgGasParams_DynamicGasParams();
        if (object.fixed_gas !== undefined && object.fixed_gas !== null) {
            message.fixedGas = helpers_1.Long.fromString(object.fixed_gas);
        }
        if (object.gas_per_item !== undefined && object.gas_per_item !== null) {
            message.gasPerItem = helpers_1.Long.fromString(object.gas_per_item);
        }
        return message;
    },
    toAmino(message) {
        const obj = {};
        obj.fixed_gas = message.fixedGas ? message.fixedGas.toString() : undefined;
        obj.gas_per_item = message.gasPerItem ? message.gasPerItem.toString() : undefined;
        return obj;
    },
    fromAminoMsg(object) {
        return exports.MsgGasParams_DynamicGasParams.fromAmino(object.value);
    },
    toAminoMsg(message) {
        return {
            type: "cosmos-sdk/DynamicGasParams",
            value: exports.MsgGasParams_DynamicGasParams.toAmino(message)
        };
    },
    fromProtoMsg(message) {
        return exports.MsgGasParams_DynamicGasParams.decode(message.value);
    },
    toProto(message) {
        return exports.MsgGasParams_DynamicGasParams.encode(message).finish();
    },
    toProtoMsg(message) {
        return {
            typeUrl: "/cosmos.gashub.v1beta1.DynamicGasParams",
            value: exports.MsgGasParams_DynamicGasParams.encode(message).finish()
        };
    }
};
//# sourceMappingURL=gashub.js.map